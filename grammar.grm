<START> ::= <prog> 

<aParams> ::= <expr> <rept-aParams1> 
<aParams> ::= EPSILON 

<aParamsTail> ::= 'COMMA' <expr> 

<addOp> ::= 'PLUS' 
<addOp> ::= 'MINUS' 
<addOp> ::= 'or' 

<arithExpr> ::= <term> <rightrec-arithExpr> 

<arraySize> ::= 'LSB' <arraySizeInt> 'RSB' 

<arraySizeInt> ::= 'intNum' 
<arraySizeInt> ::= EPSILON 

<assignOp> ::= 'ASSIGN' 

<assignStat> ::= <variable> <assignOp> <expr> 

<classDecl> ::= 'class' 'id' <opt-classDecl2> 'LCB' <rept-classDecl4> 'RCB' 'SEMICOLON' 

<expr> ::= <arithExpr> <exprLF> 

<exprLF> ::= <relOp> <arithExpr> 
<exprLF> ::= EPSILON 

<fParams> ::= <type> 'id' <rept-fParams2> <rept-fParams3> 
<fParams> ::= EPSILON 

<fParamsTail> ::= 'COMMA' <type> 'id' <rept-fParamsTail3> 

<factor> ::= <idnestid> <factorLF> 
<factor> ::= 'intNum' 
<factor> ::= 'floatNum' 
<factor> ::= 'LPAREN' <arithExpr> 'RPAREN' 
<factor> ::= 'not' <factor> 
<factor> ::= <sign> <factor> 

<factorLF> ::= 'LPAREN' <aParams> 'RPAREN' 
<factorLF> ::= <rept-factorLF0> 

<funcBody> ::= <opt-funcBody0> 'do' <rept-funcBody2> 'end' 

<funcDecl> ::= 'id' 'LPAREN' <fParams> 'RPAREN' 'COLON' <funcDeclLF> 

<funcDeclLF> ::= <type> 'SEMICOLON' 
<funcDeclLF> ::= 'void' 'SEMICOLON' 

<funcDef> ::= <funcHead> <funcBody> 'SEMICOLON' 

<funcHead0> ::= 'id' <funcHead0LF> 

<funcHead0LF> ::= 'sr' 'id' 
<funcHead0LF> ::= EPSILON 

<funcHead> ::= <funcHead0> 'LPAREN' <fParams> 'RPAREN' 'COLON' <funcHeadLF> 

<funcHeadLF> ::= <type> 'SEMICOLON' 
<funcHeadLF> ::= 'void' 'SEMICOLON' 

<functionCall> ::= <idnestid> 'LPAREN' <aParams> 'RPAREN' 

<idnestLF> ::= <rept-idnestLF0> 'DOT' 'id' 
<idnestLF> ::= 'LPAREN' <aParams> 'RPAREN' 'DOT' 'id' 

<idnestid> ::= 'id' <rept-idnestid1> 

<indice> ::= 'LSB' <arithExpr> 'RSB' 

<memberDecl> ::= 'id' <memberDeclLF> 
<memberDecl> ::= 'integer' 'id' <rept-memberDecl2> 'SEMICOLON' 
<memberDecl> ::= 'float' 'id' <rept-memberDecl2> 'SEMICOLON' 

<memberDeclLF> ::= 'LPAREN' <fParams> 'RPAREN' 'COLON' <funcDeclLF> 
<memberDeclLF> ::= 'id' <rept-memberDeclLF1> 'SEMICOLON' 

<multOp> ::= 'TIMES' 
<multOp> ::= 'DIVIDE' 
<multOp> ::= 'and' 

<opt-classDecl2> ::= 'inherits' 'id' <rept-opt-classDecl22> 
<opt-classDecl2> ::= EPSILON 

<opt-funcBody0> ::= 'local' <rept-opt-funcBody01> 
<opt-funcBody0> ::= EPSILON 

<prog> ::= <rept-prog0> <rept-prog1> 'main' <funcBody> 

<relExpr> ::= <arithExpr> <relOp> <arithExpr> 

<relOp> ::= 'EQUAL' 
<relOp> ::= 'notEQ' 
<relOp> ::= 'LT' 
<relOp> ::= 'GT' 
<relOp> ::= 'LEQ' 
<relOp> ::= 'GEQ' 

<rept-aParams1> ::= <aParamsTail> <rept-aParams1> 
<rept-aParams1> ::= EPSILON 

<rept-classDecl4> ::= <visibility> <memberDecl> <rept-classDecl4> 
<rept-classDecl4> ::= EPSILON 

<rept-fParams2> ::= <arraySize> <rept-fParams2> 
<rept-fParams2> ::= EPSILON 

<rept-fParams3> ::= <fParamsTail> <rept-fParams3> 
<rept-fParams3> ::= EPSILON 

<rept-fParamsTail3> ::= <arraySize> <rept-fParamsTail3> 
<rept-fParamsTail3> ::= EPSILON 

<rept-factorLF0> ::= <indice> <rept-factorLF0> 
<rept-factorLF0> ::= EPSILON 

<rept-funcBody2> ::= <statement> <rept-funcBody2> 
<rept-funcBody2> ::= EPSILON 

<rept-idnestLF0> ::= <indice> <rept-idnestLF0> 
<rept-idnestLF0> ::= EPSILON 

<rept-idnestid1> ::= 'DOT' <idnestLF> <rept-idnestid1> 
<rept-idnestid1> ::= EPSILON 

<rept-memberDecl2> ::= <arraySize> <rept-memberDecl2> 
<rept-memberDecl2> ::= EPSILON 

<rept-memberDeclLF1> ::= <arraySize> <rept-memberDeclLF1> 
<rept-memberDeclLF1> ::= EPSILON 

<rept-opt-classDecl22> ::= 'COMMA' 'id' <rept-opt-classDecl22> 
<rept-opt-classDecl22> ::= EPSILON 

<rept-opt-funcBody01> ::= <varDecl> <rept-opt-funcBody01> 
<rept-opt-funcBody01> ::= EPSILON 

<rept-prog0> ::= <classDecl> <rept-prog0> 
<rept-prog0> ::= EPSILON 

<rept-prog1> ::= <funcDef> <rept-prog1> 
<rept-prog1> ::= EPSILON 

<rept-statBlock1> ::= <statement> <rept-statBlock1> 
<rept-statBlock1> ::= EPSILON 

<rept-statementLF0> ::= <indice> <rept-statementLF0> 
<rept-statementLF0> ::= EPSILON 

<rept-varDecl2> ::= <arraySize> <rept-varDecl2> 
<rept-varDecl2> ::= EPSILON 

<rept-variable1> ::= <indice> <rept-variable1> 
<rept-variable1> ::= EPSILON 

<rightrec-arithExpr> ::= EPSILON 
<rightrec-arithExpr> ::= <addOp> <term> <rightrec-arithExpr> 

<rightrec-term> ::= EPSILON 
<rightrec-term> ::= <multOp> <factor> <rightrec-term> 

<sign> ::= 'PLUS' 
<sign> ::= 'MINUS' 

<statBlock> ::= 'do' <rept-statBlock1> 'end' 
<statBlock> ::= <statement> 
<statBlock> ::= EPSILON 

<statement> ::= <idnestid> <statementLF> 
<statement> ::= 'if' 'LPAREN' <relExpr> 'RPAREN' 'then' <statBlock> 'else' <statBlock> 'SEMICOLON' 
<statement> ::= 'while' 'LPAREN' <relExpr> 'RPAREN' <statBlock> 'SEMICOLON' 
<statement> ::= 'read' 'LPAREN' <variable> 'RPAREN' 'SEMICOLON' 
<statement> ::= 'write' 'LPAREN' <expr> 'RPAREN' 'SEMICOLON' 
<statement> ::= 'return' 'LPAREN' <expr> 'RPAREN' 'SEMICOLON' 

<statementLF> ::= <rept-statementLF0> <assignOp> <expr> 'SEMICOLON' 
<statementLF> ::= 'LPAREN' <aParams> 'RPAREN' 'SEMICOLON' 

<term> ::= <factor> <rightrec-term> 

<type> ::= 'integer' 
<type> ::= 'float' 
<type> ::= 'id' 

<varDecl> ::= <type> 'id' <rept-varDecl2> 'SEMICOLON' 

<variable> ::= <idnestid> <rept-variable1> 

<visibility> ::= 'public' 
<visibility> ::= 'private' 

