---------------------------------------------------------------
currentStack['$', '<START>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <START> ->  <prog> 
popping <START>adding ['<prog>'] to stack
---------------------------------------------------------------
currentStack['$', '<prog>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <prog> ->  <semMarkerClassList> <rept-prog1> <semActionClassList> <semMarkerFuncDefList> <rept-prog4> <semActionFuncDefList> main <funcBody> 
popping <prog>adding ['<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <semMarkerClassList> ->  EPSILON 
popping <semMarkerClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <rept-prog1> ->  EPSILON 
popping <rept-prog1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <semActionClassList> ->  EPSILON 
popping <semActionClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <semMarkerFuncDefList> ->  EPSILON 
popping <semMarkerFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <rept-prog4> ->  EPSILON 
popping <rept-prog4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>']. Token to read: LexToken(main,'main',3,26)
found rule to use: <semActionFuncDefList> ->  EPSILON 
popping <semActionFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', 'EPSILON']. Token to read: LexToken(main,'main',3,26)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main']. Token to read: LexToken(main,'main',3,26)
popping terminal main
---------------------------------------------------------------
currentStack['$', '<funcBody>']. Token to read: LexToken(local,'local',4,33)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <opt-funcBody1> do <semMarkerStatBlock> <rept-funcBody4> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<opt-funcBody1>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<opt-funcBody1>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',4,33)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<opt-funcBody1>', 'EPSILON']. Token to read: LexToken(local,'local',4,33)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<opt-funcBody1>']. Token to read: LexToken(local,'local',4,33)
found rule to use: <opt-funcBody1> ->  local <semMarkerLocalVarList> <rept-opt-funcBody12> <semActionLocalVarList> 
popping <opt-funcBody1>adding ['<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semMarkerLocalVarList>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semMarkerLocalVarList>', 'local']. Token to read: LexToken(local,'local',4,33)
popping terminal local
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semMarkerLocalVarList>']. Token to read: LexToken(id,'linear',5,43)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', 'EPSILON']. Token to read: LexToken(id,'linear',5,43)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>']. Token to read: LexToken(id,'linear',5,43)
found rule to use: <rept-opt-funcBody12> ->  <varDecl> <rept-opt-funcBody12> 
popping <rept-opt-funcBody12>adding ['<rept-opt-funcBody12>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<varDecl>']. Token to read: LexToken(id,'linear',5,43)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <semMarkerArrSizeList> <rept-varDecl4> <semActionArrSizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'linear',5,43)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'linear',5,43)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>']. Token to read: LexToken(id,'linear',5,43)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', 'id']. Token to read: LexToken(id,'linear',5,43)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id']. Token to read: LexToken(id,'f1',5,50)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>']. Token to read: LexToken(SEMICOLON,';',5,52)
found rule to use: <semMarkerArrSizeList> ->  EPSILON 
popping <semMarkerArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',5,52)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>']. Token to read: LexToken(SEMICOLON,';',5,52)
found rule to use: <rept-varDecl4> ->  EPSILON 
popping <rept-varDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',5,52)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>']. Token to read: LexToken(SEMICOLON,';',5,52)
found rule to use: <semActionArrSizeList> ->  EPSILON 
popping <semActionArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',5,52)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',5,52)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>']. Token to read: LexToken(id,'quadratic',6,58)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', 'EPSILON']. Token to read: LexToken(id,'quadratic',6,58)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>']. Token to read: LexToken(id,'quadratic',6,58)
found rule to use: <rept-opt-funcBody12> ->  <varDecl> <rept-opt-funcBody12> 
popping <rept-opt-funcBody12>adding ['<rept-opt-funcBody12>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<varDecl>']. Token to read: LexToken(id,'quadratic',6,58)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <semMarkerArrSizeList> <rept-varDecl4> <semActionArrSizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'quadratic',6,58)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'quadratic',6,58)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>']. Token to read: LexToken(id,'quadratic',6,58)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', 'id']. Token to read: LexToken(id,'quadratic',6,58)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id']. Token to read: LexToken(id,'f2',6,68)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>']. Token to read: LexToken(SEMICOLON,';',6,70)
found rule to use: <semMarkerArrSizeList> ->  EPSILON 
popping <semMarkerArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',6,70)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>']. Token to read: LexToken(SEMICOLON,';',6,70)
found rule to use: <rept-varDecl4> ->  EPSILON 
popping <rept-varDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',6,70)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>']. Token to read: LexToken(SEMICOLON,';',6,70)
found rule to use: <semActionArrSizeList> ->  EPSILON 
popping <semActionArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',6,70)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',6,70)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',7,76)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,76)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>']. Token to read: LexToken(integer,'integer',7,76)
found rule to use: <rept-opt-funcBody12> ->  <varDecl> <rept-opt-funcBody12> 
popping <rept-opt-funcBody12>adding ['<rept-opt-funcBody12>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<varDecl>']. Token to read: LexToken(integer,'integer',7,76)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <semMarkerArrSizeList> <rept-varDecl4> <semActionArrSizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',7,76)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,76)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',7,76)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',7,76)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>', 'id']. Token to read: LexToken(id,'counter',7,84)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', '<semMarkerArrSizeList>']. Token to read: LexToken(SEMICOLON,';',7,91)
found rule to use: <semMarkerArrSizeList> ->  EPSILON 
popping <semMarkerArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',7,91)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-varDecl4>']. Token to read: LexToken(SEMICOLON,';',7,91)
found rule to use: <rept-varDecl4> ->  EPSILON 
popping <rept-varDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',7,91)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>']. Token to read: LexToken(SEMICOLON,';',7,91)
found rule to use: <semActionArrSizeList> ->  EPSILON 
popping <semActionArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',7,91)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',7,91)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',8,95)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>', 'EPSILON']. Token to read: LexToken(do,'do',8,95)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody12>']. Token to read: LexToken(do,'do',8,95)
found rule to use: <rept-opt-funcBody12> ->  EPSILON 
popping <rept-opt-funcBody12>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',8,95)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',8,95)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',8,95)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',8,95)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semMarkerStatBlock>']. Token to read: LexToken(if,'if',9,102)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', 'EPSILON']. Token to read: LexToken(if,'if',9,102)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>']. Token to read: LexToken(if,'if',9,102)
found rule to use: <rept-funcBody4> ->  <statement> <rept-funcBody4> 
popping <rept-funcBody4>adding ['<rept-funcBody4>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<statement>']. Token to read: LexToken(if,'if',9,102)
found rule to use: <statement> ->  <semMarkerIf> if LPAREN <relExpr> RPAREN then <semMarkerThenBlock> <statBlock> <semActionThenBlock> else <semMarkerElseBlock> <statBlock> <semActionElseBlock> SEMICOLON <semActionIf> 
popping <statement>adding ['<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>', 'LPAREN', 'if', '<semMarkerIf>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>', 'LPAREN', 'if', '<semMarkerIf>']. Token to read: LexToken(if,'if',9,102)
found rule to use: <semMarkerIf> ->  EPSILON 
popping <semMarkerIf>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>', 'LPAREN', 'if', 'EPSILON']. Token to read: LexToken(if,'if',9,102)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>', 'LPAREN', 'if']. Token to read: LexToken(if,'if',9,102)
popping terminal if
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',9,104)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<relExpr>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <relExpr> ->  <semMarkerRelExpr> <arithExpr> <relOp> <arithExpr> <semActionRelExpr> 
popping <relExpr>adding ['<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <semMarkerRelExpr> ->  EPSILON 
popping <semMarkerRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', 'EPSILON']. Token to read: LexToken(id,'n',9,105)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'n',9,105)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'n',9,105)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'n',9,105)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'n',9,105)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'n',9,105)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'n',9,105)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>']. Token to read: LexToken(LEQ,'<=',9,106)
found rule to use: <relOp> ->  LEQ 
popping <relOp>adding ['LEQ'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', 'LEQ']. Token to read: LexToken(LEQ,'<=',9,106)
popping terminal LEQ
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<arithExpr>']. Token to read: LexToken(intNum,'0',9,108)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'0',9,108)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'0',9,108)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'0',9,108)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'0',9,108)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'0',9,108)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'0',9,108)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'0',9,108)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',9,109)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',9,109)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',9,109)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',9,109)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', '<semActionRelExpr>']. Token to read: LexToken(RPAREN,')',9,109)
found rule to use: <semActionRelExpr> ->  EPSILON 
popping <semActionRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then', 'RPAREN']. Token to read: LexToken(RPAREN,')',9,109)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>', 'then']. Token to read: LexToken(then,'then',10,115)
popping terminal then
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', '<semMarkerThenBlock>']. Token to read: LexToken(do,'do',11,126)
found rule to use: <semMarkerThenBlock> ->  EPSILON 
popping <semMarkerThenBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>', 'EPSILON']. Token to read: LexToken(do,'do',11,126)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', '<statBlock>']. Token to read: LexToken(do,'do',11,126)
found rule to use: <statBlock> ->  do <rept-statBlock1> end 
popping <statBlock>adding ['end', '<rept-statBlock1>', 'do'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', 'do']. Token to read: LexToken(do,'do',11,126)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> <semActionAssign> 
popping <statement>adding ['<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f1',12,135)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',12,135)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',12,135)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',12,135)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',12,135)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON 
popping <statementLF>adding ['SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',12,138)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',12,138)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f1',12,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f1',12,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',12,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',12,140)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',12,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',12,140)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',12,142)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',12,142)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',12,142)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',12,142)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',12,142)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',12,142)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',12,142)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'build',12,143)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'build',12,143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'build',12,143)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',12,148)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',12,148)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <semMarkeraParams> <aParams> <semActionaParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',12,148)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',12,148)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',12,148)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <semMarkeraParams> ->  EPSILON 
popping <semMarkeraParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', 'EPSILON']. Token to read: LexToken(intNum,'2',12,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <rept-aParams2> <semActionParam> 
popping <aParams>adding ['<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', 'EPSILON']. Token to read: LexToken(intNum,'2',12,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',12,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',12,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',12,149)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',12,149)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',12,150)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',12,150)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',12,150)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',12,150)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(COMMA,',',12,150)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <rept-aParams2> ->  <aParamsTail> <rept-aParams2> 
popping <rept-aParams2>adding ['<rept-aParams2>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',12,150)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',12,150)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',12,152)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',12,152)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',12,152)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'3.5',12,152)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'3.5',12,152)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <rept-aParams2> ->  EPSILON 
popping <rept-aParams2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>']. Token to read: LexToken(RPAREN,')',12,155)
found rule to use: <semActionaParams> ->  EPSILON 
popping <semActionaParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',12,155)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',12,156)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',12,156)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(id,'f2',13,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> <semActionAssign> 
popping <statement>adding ['<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f2',13,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',13,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',13,164)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',13,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',13,164)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,167)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,167)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,167)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,167)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON 
popping <statementLF>adding ['SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',13,167)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',13,167)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',13,169)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',13,169)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',13,169)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',13,169)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',13,169)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',13,169)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',13,171)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',13,171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',13,171)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',13,171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',13,171)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',13,171)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',13,171)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'build',13,172)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'build',13,172)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'build',13,172)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',13,177)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',13,177)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <semMarkeraParams> <aParams> <semActionaParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',13,177)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',13,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',13,177)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <semMarkeraParams> ->  EPSILON 
popping <semMarkeraParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', 'EPSILON']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <rept-aParams2> <semActionParam> 
popping <aParams>adding ['<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', 'EPSILON']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <factor> ->  <semMarkerSignedNum> <sign> <factor> <semActionSignedNum> 
popping <factor>adding ['<semActionSignedNum>', '<factor>', '<sign>', '<semMarkerSignedNum>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>', '<semMarkerSignedNum>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <semMarkerSignedNum> ->  EPSILON 
popping <semMarkerSignedNum>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>', 'EPSILON']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>']. Token to read: LexToken(MINUS,'-',13,178)
found rule to use: <sign> ->  MINUS 
popping <sign>adding ['MINUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', 'MINUS']. Token to read: LexToken(MINUS,'-',13,178)
popping terminal MINUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>']. Token to read: LexToken(floatNum,'2.0',13,179)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', 'floatNum']. Token to read: LexToken(floatNum,'2.0',13,179)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <semActionSignedNum> ->  EPSILON 
popping <semActionSignedNum>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <rept-aParams2> ->  <aParamsTail> <rept-aParams2> 
popping <rept-aParams2>adding ['<rept-aParams2>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',13,182)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',13,182)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',13,184)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',13,184)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',13,184)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'1.0',13,184)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'1.0',13,184)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(COMMA,',',13,187)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <rept-aParams2> ->  <aParamsTail> <rept-aParams2> 
popping <rept-aParams2>adding ['<rept-aParams2>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',13,187)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',13,187)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',13,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',13,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',13,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'0.0',13,189)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'0.0',13,189)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <rept-aParams2> ->  EPSILON 
popping <rept-aParams2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>']. Token to read: LexToken(RPAREN,')',13,192)
found rule to use: <semActionaParams> ->  EPSILON 
popping <semActionaParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',13,192)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',13,193)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',13,193)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(id,'counter',14,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> <semActionAssign> 
popping <statement>adding ['<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'counter',14,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',14,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',14,201)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',14,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',14,201)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,209)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,209)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,209)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,209)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON 
popping <statementLF>adding ['SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',14,209)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',14,209)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'1',14,211)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'1',14,211)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'1',14,211)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'1',14,211)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',14,212)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',14,212)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',14,212)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',14,212)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',14,212)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',14,212)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', '<semActionAssign>']. Token to read: LexToken(end,'end',15,220)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(end,'end',15,220)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', '<rept-statBlock1>']. Token to read: LexToken(end,'end',15,220)
found rule to use: <rept-statBlock1> ->  EPSILON 
popping <rept-statBlock1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',15,220)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>', 'end']. Token to read: LexToken(end,'end',15,220)
popping terminal end
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', '<semActionThenBlock>']. Token to read: LexToken(else,'else',16,228)
found rule to use: <semActionThenBlock> ->  EPSILON 
popping <semActionThenBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else', 'EPSILON']. Token to read: LexToken(else,'else',16,228)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>', 'else']. Token to read: LexToken(else,'else',16,228)
popping terminal else
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', '<semMarkerElseBlock>']. Token to read: LexToken(SEMICOLON,';',17,240)
found rule to use: <semMarkerElseBlock> ->  EPSILON 
popping <semMarkerElseBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,240)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', '<statBlock>']. Token to read: LexToken(SEMICOLON,';',17,240)
found rule to use: <statBlock> ->  EPSILON 
popping <statBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,240)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', '<semActionElseBlock>']. Token to read: LexToken(SEMICOLON,';',17,240)
found rule to use: <semActionElseBlock> ->  EPSILON 
popping <semActionElseBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,240)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',17,240)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionIf>']. Token to read: LexToken(while,'while',18,246)
found rule to use: <semActionIf> ->  EPSILON 
popping <semActionIf>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', 'EPSILON']. Token to read: LexToken(while,'while',18,246)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>']. Token to read: LexToken(while,'while',18,246)
found rule to use: <rept-funcBody4> ->  <statement> <rept-funcBody4> 
popping <rept-funcBody4>adding ['<rept-funcBody4>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<statement>']. Token to read: LexToken(while,'while',18,246)
found rule to use: <statement> ->  <semMarkerWhile> while LPAREN <relExpr> RPAREN <semMarkerStatBlock> <statBlock> SEMICOLON <semActionStatBlock> <semActionWhile> 
popping <statement>adding ['<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', '<semMarkerWhile>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', '<semMarkerWhile>']. Token to read: LexToken(while,'while',18,246)
found rule to use: <semMarkerWhile> ->  EPSILON 
popping <semMarkerWhile>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', 'EPSILON']. Token to read: LexToken(while,'while',18,246)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while']. Token to read: LexToken(while,'while',18,246)
popping terminal while
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',18,251)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <relExpr> ->  <semMarkerRelExpr> <arithExpr> <relOp> <arithExpr> <semActionRelExpr> 
popping <relExpr>adding ['<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <semMarkerRelExpr> ->  EPSILON 
popping <semMarkerRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', 'EPSILON']. Token to read: LexToken(id,'counter',18,252)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',18,252)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',18,252)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',18,252)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',18,252)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',18,252)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',18,252)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>']. Token to read: LexToken(LEQ,'<=',18,260)
found rule to use: <relOp> ->  LEQ 
popping <relOp>adding ['LEQ'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', 'LEQ']. Token to read: LexToken(LEQ,'<=',18,260)
popping terminal LEQ
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>']. Token to read: LexToken(intNum,'10',18,263)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'10',18,263)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'10',18,263)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'10',18,263)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'10',18,263)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'10',18,263)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'10',18,263)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'10',18,263)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',18,265)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',18,265)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',18,265)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',18,265)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>']. Token to read: LexToken(RPAREN,')',18,265)
found rule to use: <semActionRelExpr> ->  EPSILON 
popping <semActionRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN']. Token to read: LexToken(RPAREN,')',18,265)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>']. Token to read: LexToken(do,'do',19,273)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', 'EPSILON']. Token to read: LexToken(do,'do',19,273)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>']. Token to read: LexToken(do,'do',19,273)
found rule to use: <statBlock> ->  do <rept-statBlock1> end 
popping <statBlock>adding ['end', '<rept-statBlock1>', 'do'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'do']. Token to read: LexToken(do,'do',19,273)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',20,284)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',20,284)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',20,284)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',20,284)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',20,284)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',20,289)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',20,290)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',20,290)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',20,290)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',20,290)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',20,290)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',20,290)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',20,297)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',20,297)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',20,298)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(write,'write',21,308)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(write,'write',21,308)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',21,308)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',21,308)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',21,308)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',21,308)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',21,308)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',21,313)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f1',21,314)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f1',21,314)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',21,314)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',21,314)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',21,314)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',21,314)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',21,316)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',21,316)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',21,316)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',21,316)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',21,316)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',21,316)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',21,316)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'evaluate',21,317)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'evaluate',21,317)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'evaluate',21,317)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',21,325)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',21,325)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <semMarkeraParams> <aParams> <semActionaParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',21,325)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',21,325)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',21,325)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkeraParams> ->  EPSILON 
popping <semMarkeraParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <rept-aParams2> <semActionParam> 
popping <aParams>adding ['<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',21,326)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',21,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',21,326)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <rept-aParams2> ->  EPSILON 
popping <rept-aParams2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>']. Token to read: LexToken(RPAREN,')',21,333)
found rule to use: <semActionaParams> ->  EPSILON 
popping <semActionaParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',21,333)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',21,334)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',21,334)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',21,335)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(write,'write',22,345)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(write,'write',22,345)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',22,345)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',22,345)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',22,345)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',22,345)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',22,345)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',22,350)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',22,351)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',22,351)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',22,351)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',22,351)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',22,351)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',22,351)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',22,353)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',22,353)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',22,353)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',22,353)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',22,353)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',22,353)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',22,353)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'evaluate',22,354)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'evaluate',22,354)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'evaluate',22,354)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',22,362)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',22,362)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <semMarkeraParams> <aParams> <semActionaParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',22,362)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',22,362)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',22,362)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', '<semMarkeraParams>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkeraParams> ->  EPSILON 
popping <semMarkeraParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<aParams>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <rept-aParams2> <semActionParam> 
popping <aParams>adding ['<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<expr>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',22,363)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',22,363)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',22,363)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', '<exprLF>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', '<rept-aParams2>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <rept-aParams2> ->  EPSILON 
popping <rept-aParams2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<semActionaParams>']. Token to read: LexToken(RPAREN,')',22,370)
found rule to use: <semActionaParams> ->  EPSILON 
popping <semActionaParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',22,370)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',22,371)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',22,371)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',22,372)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(end,'end',23,380)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(end,'end',23,380)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(end,'end',23,380)
found rule to use: <rept-statBlock1> ->  EPSILON 
popping <rept-statBlock1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', 'EPSILON']. Token to read: LexToken(end,'end',23,380)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end']. Token to read: LexToken(end,'end',23,380)
popping terminal end
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',23,383)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',24,387)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>', 'EPSILON']. Token to read: LexToken(end,'end',24,387)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', '<semActionWhile>']. Token to read: LexToken(end,'end',24,387)
found rule to use: <semActionWhile> ->  EPSILON 
popping <semActionWhile>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>', 'EPSILON']. Token to read: LexToken(end,'end',24,387)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody4>']. Token to read: LexToken(end,'end',24,387)
found rule to use: <rept-funcBody4> ->  EPSILON 
popping <rept-funcBody4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',24,387)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',24,387)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',24,387)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',24,387)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', 'EPSILON']. Token to read: LexToken(end,'end',24,387)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end']. Token to read: LexToken(end,'end',24,387)
popping terminal end


Parsing successful!