---------------------------------------------------------------
currentStack['$', '<START>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <START> ->  <prog> 
popping <START>adding ['<prog>'] to stack
---------------------------------------------------------------
currentStack['$', '<prog>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <prog> ->  <semMarkerClassList> <rept-prog1> <semActionClassList> <semMarkerFuncDefList> <rept-prog4> <semActionFuncDefList> main <funcBody> 
popping <prog>adding ['<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <semMarkerClassList> ->  EPSILON 
popping <semMarkerClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',1,0)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',1,0)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',1,0)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',1,0)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'DUPE',1,6)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(LCB,'{',1,11)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(LCB,'{',1,11)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(LCB,'{',1,11)
found rule to use: <opt-classDecl4> ->  EPSILON 
popping <opt-classDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',1,11)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',1,11)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',1,11)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',1,11)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',2,14)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',2,14)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',2,14)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',2,14)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(integer,'integer',2,22)
found rule to use: <memberDecl2> ->  integer id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',2,22)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',2,30)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',2,31)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',2,31)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',2,31)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',3,33)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',3,33)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',3,33)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',3,33)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',3,33)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',3,33)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',3,33)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',3,34)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(class,'class',5,37)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',5,37)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',5,37)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',5,37)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',5,37)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',5,37)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',5,37)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'UTILITY',5,43)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(LCB,'{',5,51)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(LCB,'{',5,51)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(LCB,'{',5,51)
found rule to use: <opt-classDecl4> ->  EPSILON 
popping <opt-classDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',5,51)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',5,51)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',5,51)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',5,51)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',6,54)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',6,54)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',6,54)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',6,54)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'add',6,61)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'add',6,61)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',6,64)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',6,64)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(RPAREN,')',6,65)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',6,65)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(RPAREN,')',6,65)
found rule to use: <fParams> ->  EPSILON 
popping <fParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',6,65)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',6,65)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',6,65)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',6,65)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',6,67)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(integer,'integer',6,69)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(integer,'integer',6,69)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'integer']. Token to read: LexToken(integer,'integer',6,69)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',6,76)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',7,79)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',7,79)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',7,79)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',7,79)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',7,79)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',7,79)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',7,79)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',7,79)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'add',7,86)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'add',7,86)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',7,89)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',7,89)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(integer,'integer',7,90)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,90)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(integer,'integer',7,90)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(integer,'integer',7,90)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,90)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',7,90)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',7,90)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',7,98)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',7,99)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',7,99)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',7,99)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',7,99)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',7,99)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',7,99)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',7,99)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(integer,'integer',7,101)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,101)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',7,101)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',7,101)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'b',7,109)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',7,110)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',7,110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',7,110)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',7,110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',7,110)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',7,110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',7,110)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',7,110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',7,110)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',7,112)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(integer,'integer',7,114)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(integer,'integer',7,114)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'integer']. Token to read: LexToken(integer,'integer',7,114)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',7,121)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',8,123)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',8,123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',8,123)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',8,123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',8,123)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',8,123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',8,123)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',8,124)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(class,'class',10,127)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',10,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',10,127)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',10,127)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',10,127)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',10,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',10,127)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'POLYNOMIAL',10,133)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(inherits,'inherits',10,144)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(inherits,'inherits',10,144)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(inherits,'inherits',10,144)
found rule to use: <opt-classDecl4> ->  inherits id <rept-opt-classDecl42> 
popping <opt-classDecl4>adding ['<rept-opt-classDecl42>', 'id', 'inherits'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id', 'inherits']. Token to read: LexToken(inherits,'inherits',10,144)
popping terminal inherits
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id']. Token to read: LexToken(id,'QUADRATIC',10,153)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>']. Token to read: LexToken(LCB,'{',10,163)
found rule to use: <rept-opt-classDecl42> ->  EPSILON 
popping <rept-opt-classDecl42>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',10,163)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',10,163)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',10,163)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',10,163)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',11,166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',11,166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',11,166)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',11,166)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'evaluate',11,173)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'evaluate',11,173)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',11,181)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',11,181)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',11,182)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',11,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',11,182)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',11,182)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',11,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',11,182)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',11,182)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',11,188)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',11,189)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',11,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',11,189)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',11,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',11,189)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',11,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',11,189)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',11,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',11,189)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',11,191)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(float,'float',11,193)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(float,'float',11,193)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'float']. Token to read: LexToken(float,'float',11,193)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',11,198)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',12,201)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',12,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',12,201)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',12,201)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',12,201)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',12,201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',12,201)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',12,201)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',12,208)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',12,208)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'shadowed',12,214)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',12,222)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,222)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',12,222)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',13,224)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',13,224)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',13,224)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',13,224)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',13,224)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',13,224)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',13,224)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',13,225)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(class,'class',15,228)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',15,228)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',15,228)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',15,228)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',15,228)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',15,228)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',15,228)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'LINEAR',15,234)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(inherits,'inherits',15,241)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(inherits,'inherits',15,241)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(inherits,'inherits',15,241)
found rule to use: <opt-classDecl4> ->  inherits id <rept-opt-classDecl42> 
popping <opt-classDecl4>adding ['<rept-opt-classDecl42>', 'id', 'inherits'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id', 'inherits']. Token to read: LexToken(inherits,'inherits',15,241)
popping terminal inherits
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id']. Token to read: LexToken(id,'POLYNOMIAL',15,250)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>']. Token to read: LexToken(LCB,'{',15,261)
found rule to use: <rept-opt-classDecl42> ->  EPSILON 
popping <rept-opt-classDecl42>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',15,261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',15,261)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',15,261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',15,261)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',16,264)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',16,264)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',16,264)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',16,264)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',16,272)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',16,272)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',16,278)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',16,279)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',16,279)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(private,'private',17,282)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',17,282)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',17,282)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',17,282)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',17,282)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',17,282)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',17,282)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',17,282)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',17,290)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',17,290)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'b',17,296)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',17,297)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',17,297)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',18,300)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',18,300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',18,300)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',18,300)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',18,300)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',18,300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',18,300)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',18,300)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',18,307)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',18,307)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'shadowed',18,313)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',18,321)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',18,321)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',18,321)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',20,326)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',20,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',20,326)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',20,326)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',20,326)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',20,326)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',20,326)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',20,326)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'build',20,333)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'build',20,333)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',20,338)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',20,338)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',20,339)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',20,339)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',20,339)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',20,339)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',20,339)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',20,339)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',20,339)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'A',20,345)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',20,346)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',20,346)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',20,346)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',20,346)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',20,346)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',20,346)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',20,346)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',20,348)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',20,348)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',20,348)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',20,348)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'B',20,354)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',20,355)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,355)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',20,355)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,355)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',20,355)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,355)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',20,355)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',20,355)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',20,355)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',20,357)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(id,'LINEAR',20,359)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(id,'LINEAR',20,359)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'id']. Token to read: LexToken(id,'LINEAR',20,359)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',20,365)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',21,368)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',21,368)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',21,368)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',21,368)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',21,368)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',21,368)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',21,368)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',21,368)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'evaluate',21,375)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'evaluate',21,375)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',21,383)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',21,383)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',21,384)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',21,384)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',21,384)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',21,384)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',21,384)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',21,384)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',21,384)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',21,390)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',21,391)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,391)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',21,391)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,391)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',21,391)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,391)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',21,391)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',21,391)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',21,391)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',21,393)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(integer,'integer',21,395)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(integer,'integer',21,395)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'integer']. Token to read: LexToken(integer,'integer',21,395)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',21,402)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',22,405)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',22,405)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',22,405)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',22,405)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',22,405)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',22,405)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',22,405)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',22,405)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'getOffset',22,412)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'getOffset',22,412)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',22,421)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',22,421)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(RPAREN,')',22,422)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,422)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(RPAREN,')',22,422)
found rule to use: <fParams> ->  EPSILON 
popping <fParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,422)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',22,422)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',22,422)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',22,422)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',22,423)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(float,'float',22,425)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(float,'float',22,425)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'float']. Token to read: LexToken(float,'float',22,425)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',22,430)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',23,432)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',23,432)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',23,432)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',23,432)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',23,432)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',23,432)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',23,432)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',23,433)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(class,'class',25,436)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',25,436)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',25,436)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',25,436)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',25,436)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',25,436)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',25,436)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'QUADRATIC',25,442)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(inherits,'inherits',25,452)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(inherits,'inherits',25,452)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(inherits,'inherits',25,452)
found rule to use: <opt-classDecl4> ->  inherits id <rept-opt-classDecl42> 
popping <opt-classDecl4>adding ['<rept-opt-classDecl42>', 'id', 'inherits'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id', 'inherits']. Token to read: LexToken(inherits,'inherits',25,452)
popping terminal inherits
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>', 'id']. Token to read: LexToken(id,'POLYNOMIAL',25,461)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<rept-opt-classDecl42>']. Token to read: LexToken(LCB,'{',25,472)
found rule to use: <rept-opt-classDecl42> ->  EPSILON 
popping <rept-opt-classDecl42>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',25,472)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',25,472)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',25,472)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',25,472)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',26,475)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',26,475)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',26,475)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',26,475)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',26,483)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',26,483)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',26,489)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',26,490)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',26,490)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',26,490)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(private,'private',27,493)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',27,493)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',27,493)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',27,493)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',27,493)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',27,493)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',27,493)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',27,493)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',27,501)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',27,501)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'b',27,507)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',27,508)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',27,508)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',27,508)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(private,'private',28,511)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',28,511)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',28,511)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',28,511)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',28,511)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',28,511)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',28,511)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',28,511)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',28,519)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',28,519)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'c',28,525)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',28,526)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',28,526)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',28,526)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(private,'private',29,529)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',29,529)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',29,529)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',29,529)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',29,529)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',29,529)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',29,529)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',29,529)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(float,'float',29,537)
found rule to use: <memberDecl2> ->  float id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',29,537)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',29,543)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',29,544)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',29,544)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',29,544)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',31,549)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',31,549)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',31,549)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',31,549)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',31,549)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',31,549)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',31,549)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',31,549)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'build',31,556)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'build',31,556)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',31,561)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',31,561)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',31,562)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',31,562)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',31,562)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',31,562)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',31,562)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',31,562)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',31,562)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'A',31,568)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',31,569)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',31,569)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',31,569)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',31,569)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',31,569)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',31,569)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',31,569)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',31,571)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',31,571)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',31,571)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',31,571)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'B',31,577)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',31,578)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',31,578)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',31,578)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',31,578)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',31,578)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',31,578)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',31,578)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',31,580)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',31,580)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',31,580)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',31,580)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'C',31,586)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',31,587)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',31,587)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',31,587)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',31,587)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',31,587)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',31,587)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',31,587)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',31,587)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',31,587)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',31,589)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(id,'QUADRATIC',31,591)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(id,'QUADRATIC',31,591)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'id']. Token to read: LexToken(id,'QUADRATIC',31,591)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',31,600)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(public,'public',32,603)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(public,'public',32,603)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(public,'public',32,603)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(public,'public',32,603)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(public,'public',32,603)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(public,'public',32,603)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(public,'public',32,603)
found rule to use: <visibility> ->  public 
popping <visibility>adding ['public'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'public']. Token to read: LexToken(public,'public',32,603)
popping terminal public
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(id,'evaluate',32,610)
found rule to use: <memberDecl2> ->  id <memberDecl3> 
popping <memberDecl2>adding ['<memberDecl3>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>', 'id']. Token to read: LexToken(id,'evaluate',32,610)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl3>']. Token to read: LexToken(LPAREN,'(',32,618)
found rule to use: <memberDecl3> ->  LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <funcDeclLF> 
popping <memberDecl3>adding ['<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',32,618)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',32,619)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',32,619)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',32,619)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',32,619)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',32,619)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',32,619)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',32,619)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',32,625)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',32,626)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',32,626)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',32,626)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',32,626)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',32,626)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',32,626)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',32,626)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',32,626)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',32,626)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>', 'COLON']. Token to read: LexToken(COLON,':',32,628)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<funcDeclLF>']. Token to read: LexToken(float,'float',32,630)
found rule to use: <funcDeclLF> ->  <type> SEMICOLON 
popping <funcDeclLF>adding ['SEMICOLON', '<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<type>']. Token to read: LexToken(float,'float',32,630)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'float']. Token to read: LexToken(float,'float',32,630)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',32,635)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',33,637)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',33,637)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',33,637)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',33,637)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',33,637)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',33,637)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',33,637)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',33,638)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(class,'class',35,641)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(class,'class',35,641)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(class,'class',35,641)
found rule to use: <rept-prog1> ->  <classDecl> <rept-prog1> 
popping <rept-prog1>adding ['<rept-prog1>', '<classDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<classDecl>']. Token to read: LexToken(class,'class',35,641)
found rule to use: <classDecl> ->  <semMarkerClassDecl> class id <semMarkerInheritanceList> <opt-classDecl4> <semActionInheritanceList> LCB <memberList> RCB SEMICOLON <semActionClassDecl> 
popping <classDecl>adding ['<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', '<semMarkerClassDecl>']. Token to read: LexToken(class,'class',35,641)
found rule to use: <semMarkerClassDecl> ->  EPSILON 
popping <semMarkerClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class', 'EPSILON']. Token to read: LexToken(class,'class',35,641)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id', 'class']. Token to read: LexToken(class,'class',35,641)
popping terminal class
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>', 'id']. Token to read: LexToken(id,'DUPE',35,647)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', '<semMarkerInheritanceList>']. Token to read: LexToken(LCB,'{',35,652)
found rule to use: <semMarkerInheritanceList> ->  EPSILON 
popping <semMarkerInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>', 'EPSILON']. Token to read: LexToken(LCB,'{',35,652)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', '<opt-classDecl4>']. Token to read: LexToken(LCB,'{',35,652)
found rule to use: <opt-classDecl4> ->  EPSILON 
popping <opt-classDecl4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>', 'EPSILON']. Token to read: LexToken(LCB,'{',35,652)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', '<semActionInheritanceList>']. Token to read: LexToken(LCB,'{',35,652)
found rule to use: <semActionInheritanceList> ->  EPSILON 
popping <semActionInheritanceList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB', 'EPSILON']. Token to read: LexToken(LCB,'{',35,652)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>', 'LCB']. Token to read: LexToken(LCB,'{',35,652)
popping terminal LCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<memberList>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <memberList> ->  <semMarkerMemberList> <rept-memberList1> <semActionMemberList> 
popping <memberList>adding ['<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semMarkerMemberList>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <semMarkerMemberList> ->  EPSILON 
popping <semMarkerMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(private,'private',36,655)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <rept-memberList1> ->  <memberDecl> <rept-memberList1> 
popping <rept-memberList1>adding ['<rept-memberList1>', '<memberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<memberDecl>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <memberDecl> ->  <semMarkerMemberDecl> <visibility> <memberDecl2> <semActionMemberDecl> 
popping <memberDecl>adding ['<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', '<semMarkerMemberDecl>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <semMarkerMemberDecl> ->  EPSILON 
popping <semMarkerMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>', 'EPSILON']. Token to read: LexToken(private,'private',36,655)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', '<visibility>']. Token to read: LexToken(private,'private',36,655)
found rule to use: <visibility> ->  private 
popping <visibility>adding ['private'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>', 'private']. Token to read: LexToken(private,'private',36,655)
popping terminal private
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', '<memberDecl2>']. Token to read: LexToken(integer,'integer',36,663)
found rule to use: <memberDecl2> ->  integer id <arraySizeList> SEMICOLON 
popping <memberDecl2>adding ['SEMICOLON', '<arraySizeList>', 'id', 'integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',36,663)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',36,671)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',36,672)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',36,672)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',36,672)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', '<semActionMemberDecl>']. Token to read: LexToken(RCB,'}',37,674)
found rule to use: <semActionMemberDecl> ->  EPSILON 
popping <semActionMemberDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>', 'EPSILON']. Token to read: LexToken(RCB,'}',37,674)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', '<rept-memberList1>']. Token to read: LexToken(RCB,'}',37,674)
found rule to use: <rept-memberList1> ->  EPSILON 
popping <rept-memberList1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>', 'EPSILON']. Token to read: LexToken(RCB,'}',37,674)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', '<semActionMemberList>']. Token to read: LexToken(RCB,'}',37,674)
found rule to use: <semActionMemberList> ->  EPSILON 
popping <semActionMemberList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB', 'EPSILON']. Token to read: LexToken(RCB,'}',37,674)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON', 'RCB']. Token to read: LexToken(RCB,'}',37,674)
popping terminal RCB
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',37,675)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semActionClassDecl>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <semActionClassDecl> ->  EPSILON 
popping <semActionClassDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <rept-prog1> ->  EPSILON 
popping <rept-prog1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', 'EPSILON']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <semActionClassList> ->  EPSILON 
popping <semActionClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', 'EPSILON']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <semMarkerFuncDefList> ->  EPSILON 
popping <semMarkerFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'POLYNOMIAL',40,679)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',40,689)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',40,689)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'evaluate',40,691)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',40,699)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',40,700)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',40,700)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',40,700)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',40,700)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',40,700)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',40,700)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',40,700)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',40,706)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',40,707)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',40,707)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',40,707)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',40,707)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',40,707)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',40,707)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',40,707)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',40,707)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',40,707)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',40,709)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(float,'float',40,711)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(float,'float',40,711)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'float']. Token to read: LexToken(float,'float',40,711)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(do,'do',41,719)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(do,'do',41,719)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',41,719)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(do,'do',41,719)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(do,'do',41,719)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(do,'do',41,719)
found rule to use: <opt-funcBody2> ->  EPSILON 
popping <opt-funcBody2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',41,719)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',41,719)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',41,719)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',41,719)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(return,'return',42,726)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',42,726)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',42,726)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',42,726)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',42,726)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',42,726)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',42,726)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',42,733)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'0',42,734)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'0',42,734)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'0',42,734)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'0',42,734)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',42,735)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',42,735)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',42,735)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',42,735)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',42,735)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',42,735)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',42,736)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',43,740)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',43,740)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',43,740)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',43,740)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',43,740)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',43,740)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',43,740)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',43,740)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',43,740)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'LINEAR',45,745)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',45,745)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'LINEAR',45,745)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'LINEAR',45,745)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'LINEAR',45,745)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',45,745)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'LINEAR',45,745)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'LINEAR',45,745)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',45,751)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',45,751)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'evaluate',45,753)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',45,761)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',45,762)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',45,762)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',45,762)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',45,762)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',45,762)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',45,762)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',45,762)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',45,768)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',45,769)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',45,769)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',45,769)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',45,769)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',45,769)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',45,769)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',45,769)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',45,769)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',45,769)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',45,771)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(float,'float',45,773)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(float,'float',45,773)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'float']. Token to read: LexToken(float,'float',45,773)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(local,'local',46,781)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',46,781)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',46,781)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',46,781)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',46,781)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',46,781)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',46,781)
popping terminal local
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(float,'float',47,791)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(float,'float',47,791)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(float,'float',47,791)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',47,791)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',47,791)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',47,791)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'result',47,797)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',47,803)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',47,803)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',47,803)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',48,807)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',48,807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',48,807)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',48,807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',48,807)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',48,807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',48,807)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'result',49,814)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'result',49,814)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',49,814)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',49,814)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',49,814)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',49,814)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',49,821)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',49,821)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',49,821)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',49,821)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',49,821)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',49,821)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',49,823)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',49,823)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'0.0',49,823)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'0.0',49,823)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',49,826)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',49,826)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',49,826)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',49,826)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',49,826)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',49,826)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'result',50,832)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'result',50,832)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',50,832)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',50,832)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',50,832)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',50,832)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',50,839)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',50,839)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',50,839)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',50,839)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',50,839)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',50,839)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'a',50,841)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'a',50,841)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'a',50,841)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',50,841)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',50,841)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'a',50,841)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(TIMES,'*',50,843)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(TIMES,'*',50,843)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(TIMES,'*',50,843)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(TIMES,'*',50,843)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <rightrec-term> ->  <multOp> <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <rightrec-term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>']. Token to read: LexToken(TIMES,'*',50,843)
found rule to use: <multOp> ->  TIMES 
popping <multOp>adding ['TIMES'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', 'TIMES']. Token to read: LexToken(TIMES,'*',50,843)
popping terminal TIMES
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'x',50,845)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'x',50,845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'x',50,845)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'x',50,845)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'x',50,845)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'x',50,845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'x',50,845)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'x',50,845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'x',50,845)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',50,847)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',50,847)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'b',50,849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'b',50,849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'b',50,849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',50,849)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',50,849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'b',50,849)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',50,850)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',50,850)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(return,'return',51,856)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',51,856)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',51,856)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',51,856)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',51,856)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',51,856)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',51,856)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',51,863)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'result',51,864)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'result',51,864)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',51,864)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',51,864)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',51,864)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',51,864)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',51,870)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',51,870)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',51,871)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',52,875)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',52,875)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',52,875)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',52,875)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',52,875)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',52,875)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',52,875)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',52,875)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',52,875)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'LINEAR',54,882)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',54,882)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'LINEAR',54,882)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'LINEAR',54,882)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'LINEAR',54,882)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',54,882)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'LINEAR',54,882)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'LINEAR',54,882)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',54,888)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',54,888)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'arclength',54,890)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',54,899)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(RPAREN,')',54,900)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',54,900)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(RPAREN,')',54,900)
found rule to use: <fParams> ->  EPSILON 
popping <fParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',54,900)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',54,900)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',54,900)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',54,900)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',54,902)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(float,'float',54,904)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(float,'float',54,904)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'float']. Token to read: LexToken(float,'float',54,904)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(local,'local',55,912)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',55,912)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',55,912)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',55,912)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',55,912)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',55,912)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',55,912)
popping terminal local
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(float,'float',56,922)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(float,'float',56,922)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(float,'float',56,922)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',56,922)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',56,922)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',56,922)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'length',56,928)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',56,934)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',56,934)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',56,934)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',57,938)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',57,938)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',57,938)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',57,938)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',57,938)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',57,938)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',57,938)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'length',58,945)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'length',58,945)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'length',58,945)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'length',58,945)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'length',58,945)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'length',58,945)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',58,952)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',58,952)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',58,952)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',58,952)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',58,952)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',58,952)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',58,954)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',58,954)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'0.0',58,954)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'0.0',58,954)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',58,957)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',58,957)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',58,957)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',58,957)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',58,957)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',58,957)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(return,'return',59,960)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',59,960)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',59,960)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',59,960)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',59,960)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',59,960)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',59,960)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',59,967)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'length',59,968)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'length',59,968)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'length',59,968)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'length',59,968)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'length',59,968)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'length',59,968)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',59,974)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',59,974)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',59,975)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',60,979)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',60,979)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',60,979)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',60,979)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',60,979)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',60,979)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',60,979)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',60,979)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',60,979)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'QUADRATIC',62,986)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',62,986)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'QUADRATIC',62,986)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'QUADRATIC',62,986)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'QUADRATIC',62,986)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',62,986)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'QUADRATIC',62,986)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'QUADRATIC',62,986)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',62,995)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',62,995)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'evaluate',62,997)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',62,1005)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',62,1006)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',62,1006)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',62,1006)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',62,1006)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',62,1006)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',62,1006)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',62,1006)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'x',62,1012)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',62,1013)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',62,1013)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',62,1013)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',62,1013)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',62,1013)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',62,1013)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',62,1013)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',62,1013)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',62,1013)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',62,1015)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(float,'float',62,1017)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(float,'float',62,1017)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'float']. Token to read: LexToken(float,'float',62,1017)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(local,'local',63,1025)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',63,1025)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',63,1025)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',63,1025)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',63,1025)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',63,1025)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',63,1025)
popping terminal local
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(id,'int',64,1035)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(id,'int',64,1035)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'int',64,1035)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'int',64,1035)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(id,'int',64,1035)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'id']. Token to read: LexToken(id,'int',64,1035)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'output',64,1039)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',64,1045)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',64,1045)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',64,1045)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(float,'float',65,1051)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(float,'float',65,1051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(float,'float',65,1051)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(float,'float',65,1051)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(float,'float',65,1051)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',65,1051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',65,1051)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',65,1051)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'result',65,1057)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',65,1063)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',65,1063)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',65,1063)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',66,1067)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',66,1067)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',66,1067)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',66,1067)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',66,1067)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',66,1067)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',66,1067)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'result',67,1078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'result',67,1078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',67,1078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',67,1078)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',67,1078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',67,1078)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',67,1085)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',67,1085)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',67,1085)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',67,1085)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',67,1085)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',67,1085)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'a',67,1087)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'a',67,1087)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'a',67,1087)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',67,1087)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',67,1087)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'a',67,1087)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',67,1088)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',67,1088)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'result',68,1094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'result',68,1094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',68,1094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',68,1094)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',68,1094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',68,1094)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',68,1101)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',68,1101)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',68,1101)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',68,1101)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',68,1101)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',68,1101)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'result',68,1103)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'result',68,1103)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',68,1103)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',68,1103)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',68,1103)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',68,1103)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(TIMES,'*',68,1110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(TIMES,'*',68,1110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(TIMES,'*',68,1110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(TIMES,'*',68,1110)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <rightrec-term> ->  <multOp> <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <rightrec-term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>']. Token to read: LexToken(TIMES,'*',68,1110)
found rule to use: <multOp> ->  TIMES 
popping <multOp>adding ['TIMES'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', 'TIMES']. Token to read: LexToken(TIMES,'*',68,1110)
popping terminal TIMES
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'x',68,1112)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'x',68,1112)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'x',68,1112)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'x',68,1112)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'x',68,1112)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'x',68,1112)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'x',68,1112)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'x',68,1112)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'x',68,1112)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',68,1114)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',68,1114)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'b',68,1116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'b',68,1116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'b',68,1116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',68,1116)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',68,1116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'b',68,1116)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',68,1117)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',68,1117)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'result',69,1123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'result',69,1123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',69,1123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',69,1123)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',69,1123)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',69,1123)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',69,1130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',69,1130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',69,1130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',69,1130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',69,1130)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',69,1130)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'result',69,1132)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'result',69,1132)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',69,1132)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',69,1132)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',69,1132)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',69,1132)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(TIMES,'*',69,1139)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(TIMES,'*',69,1139)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(TIMES,'*',69,1139)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(TIMES,'*',69,1139)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <rightrec-term> ->  <multOp> <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <rightrec-term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>']. Token to read: LexToken(TIMES,'*',69,1139)
found rule to use: <multOp> ->  TIMES 
popping <multOp>adding ['TIMES'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', 'TIMES']. Token to read: LexToken(TIMES,'*',69,1139)
popping terminal TIMES
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'x',69,1141)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'x',69,1141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'x',69,1141)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'x',69,1141)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'x',69,1141)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'x',69,1141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'x',69,1141)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'x',69,1141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'x',69,1141)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',69,1143)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',69,1143)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'c',69,1145)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'c',69,1145)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'c',69,1145)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'c',69,1145)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'c',69,1145)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'c',69,1145)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',69,1146)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',69,1146)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(return,'return',70,1152)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',70,1152)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',70,1152)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',70,1152)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',70,1152)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',70,1152)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',70,1152)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',70,1159)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'result',70,1160)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'result',70,1160)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'result',70,1160)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'result',70,1160)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'result',70,1160)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'result',70,1160)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',70,1166)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',70,1166)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',70,1167)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',71,1171)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',71,1171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',71,1171)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',71,1171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',71,1171)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',71,1171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',71,1171)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',71,1171)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',71,1171)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'LINEAR',73,1178)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',73,1178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'LINEAR',73,1178)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'LINEAR',73,1178)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'LINEAR',73,1178)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',73,1178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'LINEAR',73,1178)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'LINEAR',73,1178)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',73,1184)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',73,1184)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'build',73,1186)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',73,1191)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',73,1192)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',73,1192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',73,1192)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',73,1192)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',73,1192)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',73,1192)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',73,1192)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'A',73,1198)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',73,1199)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',73,1199)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',73,1199)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',73,1199)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',73,1199)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',73,1199)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',73,1199)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',73,1201)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',73,1201)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',73,1201)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',73,1201)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'B',73,1207)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',73,1208)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',73,1208)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',73,1208)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',73,1208)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',73,1208)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',73,1208)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',73,1208)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',73,1208)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',73,1208)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',73,1210)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(id,'LINEAR',73,1212)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(id,'LINEAR',73,1212)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'id']. Token to read: LexToken(id,'LINEAR',73,1212)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(local,'local',74,1221)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',74,1221)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',74,1221)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',74,1221)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',74,1221)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',74,1221)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',74,1221)
popping terminal local
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(id,'LINEAR',75,1231)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(id,'LINEAR',75,1231)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'LINEAR',75,1231)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',75,1231)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(id,'LINEAR',75,1231)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'id']. Token to read: LexToken(id,'LINEAR',75,1231)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'new_function',75,1238)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',75,1250)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',75,1250)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',75,1250)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',76,1254)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',76,1254)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',76,1254)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',76,1254)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',76,1254)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',76,1254)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',76,1254)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'new_function',77,1261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'new_function',77,1261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',77,1261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',77,1261)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',77,1261)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',77,1261)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',77,1273)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',77,1273)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',77,1273)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',77,1273)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',77,1273)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',77,1273)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',77,1273)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',77,1274)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',77,1274)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'a',77,1274)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',77,1276)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',77,1276)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',77,1276)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',77,1276)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',77,1276)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',77,1276)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'A',77,1278)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'A',77,1278)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'A',77,1278)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'A',77,1278)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'A',77,1278)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'A',77,1278)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',77,1279)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',77,1279)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'new_function',78,1285)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'new_function',78,1285)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',78,1285)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',78,1285)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',78,1285)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',78,1285)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',78,1297)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',78,1297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',78,1297)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',78,1297)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',78,1297)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',78,1297)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',78,1297)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',78,1298)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',78,1298)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'b',78,1298)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',78,1300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',78,1300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',78,1300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',78,1300)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',78,1300)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',78,1300)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'B',78,1302)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'B',78,1302)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'B',78,1302)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'B',78,1302)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'B',78,1302)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'B',78,1302)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',78,1303)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',78,1303)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(return,'return',79,1309)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',79,1309)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',79,1309)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',79,1309)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',79,1309)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',79,1309)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',79,1309)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',79,1316)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'new_function',79,1317)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'new_function',79,1317)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',79,1317)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',79,1317)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',79,1317)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',79,1317)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',79,1329)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',79,1329)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',79,1330)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',80,1334)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',80,1334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',80,1334)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',80,1334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',80,1334)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',80,1334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',80,1334)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',80,1334)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',80,1334)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'QUADRATIC',82,1343)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',82,1343)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'QUADRATIC',82,1343)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'QUADRATIC',82,1343)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'QUADRATIC',82,1343)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',82,1343)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'QUADRATIC',82,1343)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'QUADRATIC',82,1343)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',82,1352)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',82,1352)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'build',82,1354)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',82,1359)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(float,'float',82,1360)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(float,'float',82,1360)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(float,'float',82,1360)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',82,1360)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',82,1360)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',82,1360)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',82,1360)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'A',82,1366)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',82,1367)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',82,1367)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',82,1367)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',82,1367)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',82,1367)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',82,1367)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',82,1367)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',82,1369)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',82,1369)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',82,1369)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',82,1369)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'B',82,1375)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',82,1376)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',82,1376)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',82,1376)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',82,1376)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',82,1376)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',82,1376)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',82,1376)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(float,'float',82,1378)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(float,'float',82,1378)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(float,'float',82,1378)
found rule to use: <type> ->  float 
popping <type>adding ['float'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'float']. Token to read: LexToken(float,'float',82,1378)
popping terminal float
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'C',82,1384)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',82,1385)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',82,1385)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',82,1385)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',82,1385)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',82,1385)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',82,1385)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',82,1385)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',82,1385)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',82,1385)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',82,1387)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(id,'QUADRATIC',82,1389)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(id,'QUADRATIC',82,1389)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'id']. Token to read: LexToken(id,'QUADRATIC',82,1389)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(local,'local',83,1401)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',83,1401)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',83,1401)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',83,1401)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',83,1401)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',83,1401)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',83,1401)
popping terminal local
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(id,'QUADRATIC',84,1411)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(id,'QUADRATIC',84,1411)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'QUADRATIC',84,1411)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',84,1411)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(id,'QUADRATIC',84,1411)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'id']. Token to read: LexToken(id,'QUADRATIC',84,1411)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'new_function',84,1421)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',84,1433)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',84,1433)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',84,1433)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',85,1437)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',85,1437)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',85,1437)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',85,1437)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',85,1437)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',85,1437)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',85,1437)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'new_function',86,1444)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'new_function',86,1444)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',86,1444)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',86,1444)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',86,1444)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',86,1444)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',86,1456)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',86,1456)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',86,1456)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',86,1456)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',86,1456)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',86,1456)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',86,1456)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',86,1457)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',86,1457)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'a',86,1457)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',86,1459)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',86,1459)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',86,1459)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',86,1459)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',86,1459)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',86,1459)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'A',86,1461)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'A',86,1461)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'A',86,1461)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'A',86,1461)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'A',86,1461)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'A',86,1461)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',86,1462)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',86,1462)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'new_function',87,1468)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'new_function',87,1468)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',87,1468)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',87,1468)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',87,1468)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',87,1468)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',87,1480)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',87,1480)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',87,1480)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',87,1480)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',87,1480)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',87,1480)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',87,1480)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',87,1481)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',87,1481)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'b',87,1481)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',87,1483)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',87,1483)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',87,1483)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',87,1483)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',87,1483)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',87,1483)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'B',87,1485)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'B',87,1485)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'B',87,1485)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'B',87,1485)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'B',87,1485)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'B',87,1485)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',87,1486)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',87,1486)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'new_function',88,1492)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'new_function',88,1492)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',88,1492)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',88,1492)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',88,1492)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',88,1492)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',88,1504)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',88,1504)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',88,1504)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',88,1504)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',88,1504)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',88,1504)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',88,1504)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'c',88,1505)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'c',88,1505)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'c',88,1505)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',88,1507)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',88,1507)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',88,1507)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',88,1507)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',88,1507)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',88,1507)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'C',88,1509)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'C',88,1509)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'C',88,1509)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'C',88,1509)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'C',88,1509)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'C',88,1509)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',88,1510)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',88,1510)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(return,'return',89,1516)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',89,1516)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',89,1516)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',89,1516)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',89,1516)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',89,1516)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',89,1516)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',89,1523)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'new_function',89,1524)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'new_function',89,1524)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'new_function',89,1524)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'new_function',89,1524)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'new_function',89,1524)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'new_function',89,1524)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',89,1536)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',89,1536)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',89,1537)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',90,1541)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',90,1541)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',90,1541)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',90,1541)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',90,1541)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',90,1541)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',90,1541)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',90,1541)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',90,1541)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'UTILITY',92,1548)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'UTILITY',92,1548)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'UTILITY',92,1548)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'UTILITY',92,1548)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'UTILITY',92,1548)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'UTILITY',92,1548)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'UTILITY',92,1548)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'UTILITY',92,1548)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',92,1555)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',92,1555)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'add',92,1557)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',92,1560)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(RPAREN,')',92,1561)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',92,1561)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(RPAREN,')',92,1561)
found rule to use: <fParams> ->  EPSILON 
popping <fParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',92,1561)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',92,1561)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',92,1561)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',92,1561)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',92,1563)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(integer,'integer',92,1565)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(integer,'integer',92,1565)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'integer']. Token to read: LexToken(integer,'integer',92,1565)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(do,'do',93,1575)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(do,'do',93,1575)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',93,1575)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(do,'do',93,1575)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(do,'do',93,1575)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(do,'do',93,1575)
found rule to use: <opt-funcBody2> ->  EPSILON 
popping <opt-funcBody2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',93,1575)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',93,1575)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',93,1575)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',93,1575)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(return,'return',94,1582)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',94,1582)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',94,1582)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',94,1582)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',94,1582)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',94,1582)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',94,1582)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',94,1589)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'0',94,1590)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'0',94,1590)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'0',94,1590)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'0',94,1590)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',94,1591)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',94,1591)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',94,1591)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',94,1591)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',94,1591)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',94,1591)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',94,1592)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',95,1596)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',95,1596)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',95,1596)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',95,1596)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',95,1596)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',95,1596)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',95,1596)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',95,1596)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',95,1596)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(id,'UTILITY',97,1603)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(id,'UTILITY',97,1603)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(id,'UTILITY',97,1603)
found rule to use: <rept-prog4> ->  <funcDef> <rept-prog4> 
popping <rept-prog4>adding ['<rept-prog4>', '<funcDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<funcDef>']. Token to read: LexToken(id,'UTILITY',97,1603)
found rule to use: <funcDef> ->  <semMarkerFuncDef> <funcHead> <funcBody> <semActionFuncDef> 
popping <funcDef>adding ['<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', '<semMarkerFuncDef>']. Token to read: LexToken(id,'UTILITY',97,1603)
found rule to use: <semMarkerFuncDef> ->  EPSILON 
popping <semMarkerFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>', 'EPSILON']. Token to read: LexToken(id,'UTILITY',97,1603)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<funcHead>']. Token to read: LexToken(id,'UTILITY',97,1603)
found rule to use: <funcHead> ->  id <scope> LPAREN <semMarkerfParams> <fParams> <semActionfParams> RPAREN COLON <returnType> 
popping <funcHead>adding ['<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>', 'id']. Token to read: LexToken(id,'UTILITY',97,1603)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', '<scope>']. Token to read: LexToken(DOUBLECOLON,'::',97,1610)
found rule to use: <scope> ->  DOUBLECOLON id 
popping <scope>adding ['id', 'DOUBLECOLON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id', 'DOUBLECOLON']. Token to read: LexToken(DOUBLECOLON,'::',97,1610)
popping terminal DOUBLECOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN', 'id']. Token to read: LexToken(id,'add',97,1612)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',97,1615)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', '<semMarkerfParams>']. Token to read: LexToken(integer,'integer',97,1616)
found rule to use: <semMarkerfParams> ->  EPSILON 
popping <semMarkerfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>', 'EPSILON']. Token to read: LexToken(integer,'integer',97,1616)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<fParams>']. Token to read: LexToken(integer,'integer',97,1616)
found rule to use: <fParams> ->  <semMarkerParam> <type> id <arraySizeList> <semActionParam> <rept-fParams5> 
popping <fParams>adding ['<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(integer,'integer',97,1616)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',97,1616)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',97,1616)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',97,1616)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',97,1624)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(COMMA,',',97,1625)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',97,1625)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(COMMA,',',97,1625)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(COMMA,',',97,1625)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(COMMA,',',97,1625)
found rule to use: <rept-fParams5> ->  <fParamsTail> <rept-fParams5> 
popping <rept-fParams5>adding ['<rept-fParams5>', '<fParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<fParamsTail>']. Token to read: LexToken(COMMA,',',97,1625)
found rule to use: <fParamsTail> ->  COMMA <semMarkerParam> <type> id <arraySizeList> <semActionParam> 
popping <fParamsTail>adding ['<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',97,1625)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', '<semMarkerParam>']. Token to read: LexToken(integer,'integer',97,1627)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',97,1627)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',97,1627)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',97,1627)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>', 'id']. Token to read: LexToken(id,'b',97,1635)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', '<arraySizeList>']. Token to read: LexToken(RPAREN,')',97,1636)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',97,1636)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',97,1636)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>', 'EPSILON']. Token to read: LexToken(RPAREN,')',97,1636)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', '<rept-fParams5>']. Token to read: LexToken(RPAREN,')',97,1636)
found rule to use: <rept-fParams5> ->  EPSILON 
popping <rept-fParams5>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>', 'EPSILON']. Token to read: LexToken(RPAREN,')',97,1636)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', '<semActionfParams>']. Token to read: LexToken(RPAREN,')',97,1636)
found rule to use: <semActionfParams> ->  EPSILON 
popping <semActionfParams>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',97,1636)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',97,1636)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>', 'COLON']. Token to read: LexToken(COLON,':',97,1638)
popping terminal COLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<returnType>']. Token to read: LexToken(integer,'integer',97,1640)
found rule to use: <returnType> ->  <type> 
popping <returnType>adding ['<type>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', '<type>']. Token to read: LexToken(integer,'integer',97,1640)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>', 'integer']. Token to read: LexToken(integer,'integer',97,1640)
popping terminal integer
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', '<funcBody>']. Token to read: LexToken(do,'do',98,1650)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(do,'do',98,1650)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',98,1650)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(do,'do',98,1650)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(do,'do',98,1650)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(do,'do',98,1650)
found rule to use: <opt-funcBody2> ->  EPSILON 
popping <opt-funcBody2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',98,1650)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',98,1650)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',98,1650)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',98,1650)
popping terminal do
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(return,'return',99,1657)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(return,'return',99,1657)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(return,'return',99,1657)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(return,'return',99,1657)
found rule to use: <statement> ->  <semMarkerReturn> return LPAREN <expr> RPAREN SEMICOLON <semActionReturn> 
popping <statement>adding ['<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', '<semMarkerReturn>']. Token to read: LexToken(return,'return',99,1657)
found rule to use: <semMarkerReturn> ->  EPSILON 
popping <semMarkerReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return', 'EPSILON']. Token to read: LexToken(return,'return',99,1657)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'return']. Token to read: LexToken(return,'return',99,1657)
popping terminal return
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',99,1664)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'a',99,1665)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'a',99,1665)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'a',99,1665)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',99,1665)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',99,1665)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'a',99,1665)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',99,1666)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',99,1666)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'b',99,1667)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'b',99,1667)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'b',99,1667)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',99,1667)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',99,1667)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'b',99,1667)
popping terminal id
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',99,1668)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',99,1668)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',99,1669)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionReturn>']. Token to read: LexToken(end,'end',100,1673)
found rule to use: <semActionReturn> ->  EPSILON 
popping <semActionReturn>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',100,1673)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',100,1673)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',100,1673)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',100,1673)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',100,1673)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',100,1673)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end', 'EPSILON']. Token to read: LexToken(end,'end',100,1673)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>', 'end']. Token to read: LexToken(end,'end',100,1673)
popping terminal end
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semActionFuncDef>']. Token to read: LexToken(main,'main',103,1679)
found rule to use: <semActionFuncDef> ->  EPSILON 
popping <semActionFuncDef>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(main,'main',103,1679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(main,'main',103,1679)
found rule to use: <rept-prog4> ->  EPSILON 
popping <rept-prog4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', 'EPSILON']. Token to read: LexToken(main,'main',103,1679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>']. Token to read: LexToken(main,'main',103,1679)
found rule to use: <semActionFuncDefList> ->  EPSILON 
popping <semActionFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', 'EPSILON']. Token to read: LexToken(main,'main',103,1679)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main']. Token to read: LexToken(main,'main',103,1679)
popping terminal main
---------------------------------------------------------------
currentStack['$', '<funcBody>']. Token to read: LexToken(local,'local',104,1686)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',104,1686)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',104,1686)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',104,1686)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',104,1686)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',104,1686)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',104,1686)
popping terminal local
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(id,'LINEAR',105,1696)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(id,'LINEAR',105,1696)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'LINEAR',105,1696)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'LINEAR',105,1696)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(id,'LINEAR',105,1696)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'id']. Token to read: LexToken(id,'LINEAR',105,1696)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'f1',105,1703)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',105,1705)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',105,1705)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',105,1705)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(id,'QUADRATIC',106,1711)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',106,1711)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(id,'QUADRATIC',106,1711)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(id,'QUADRATIC',106,1711)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(id,'QUADRATIC',106,1711)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(id,'QUADRATIC',106,1711)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(id,'QUADRATIC',106,1711)
found rule to use: <type> ->  id 
popping <type>adding ['id'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'id']. Token to read: LexToken(id,'QUADRATIC',106,1711)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'f2',106,1721)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',106,1723)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',106,1723)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',106,1723)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',107,1729)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',107,1729)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',107,1729)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',107,1729)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',107,1729)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',107,1729)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',107,1729)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',107,1729)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'counter',107,1737)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',107,1744)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',107,1744)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',107,1744)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',108,1747)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',108,1747)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',108,1747)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',108,1747)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',108,1747)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',108,1747)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',108,1747)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',108,1747)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'array',108,1755)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(LSB,'[',108,1760)
found rule to use: <arraySizeList> ->  <semMarkerArrSizeList> <arraySize> <rept-arraySizeList2> <semActionArrSizeList> 
popping <arraySizeList>adding ['<semActionArrSizeList>', '<rept-arraySizeList2>', '<arraySize>', '<semMarkerArrSizeList>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', '<arraySize>', '<semMarkerArrSizeList>']. Token to read: LexToken(LSB,'[',108,1760)
found rule to use: <semMarkerArrSizeList> ->  EPSILON 
popping <semMarkerArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', '<arraySize>', 'EPSILON']. Token to read: LexToken(LSB,'[',108,1760)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', '<arraySize>']. Token to read: LexToken(LSB,'[',108,1760)
found rule to use: <arraySize> ->  LSB <semMarkerArraySize> <arraySizeInt> <semActionArraySize> RSB 
popping <arraySize>adding ['RSB', '<semActionArraySize>', '<arraySizeInt>', '<semMarkerArraySize>', 'LSB'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>', '<arraySizeInt>', '<semMarkerArraySize>', 'LSB']. Token to read: LexToken(LSB,'[',108,1760)
popping terminal LSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>', '<arraySizeInt>', '<semMarkerArraySize>']. Token to read: LexToken(intNum,'10',108,1761)
found rule to use: <semMarkerArraySize> ->  EPSILON 
popping <semMarkerArraySize>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>', '<arraySizeInt>', 'EPSILON']. Token to read: LexToken(intNum,'10',108,1761)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>', '<arraySizeInt>']. Token to read: LexToken(intNum,'10',108,1761)
found rule to use: <arraySizeInt> ->  intNum 
popping <arraySizeInt>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>', 'intNum']. Token to read: LexToken(intNum,'10',108,1761)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', '<semActionArraySize>']. Token to read: LexToken(RSB,']',108,1763)
found rule to use: <semActionArraySize> ->  EPSILON 
popping <semActionArraySize>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB', 'EPSILON']. Token to read: LexToken(RSB,']',108,1763)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>', 'RSB']. Token to read: LexToken(RSB,']',108,1763)
popping terminal RSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', '<rept-arraySizeList2>']. Token to read: LexToken(SEMICOLON,';',108,1764)
found rule to use: <rept-arraySizeList2> ->  EPSILON 
popping <rept-arraySizeList2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',108,1764)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<semActionArrSizeList>']. Token to read: LexToken(SEMICOLON,';',108,1764)
found rule to use: <semActionArrSizeList> ->  EPSILON 
popping <semActionArrSizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',108,1764)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',108,1764)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',109,1768)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',109,1768)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',109,1768)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',109,1768)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',109,1768)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',109,1768)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',109,1768)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1775)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1775)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1775)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',110,1775)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',110,1775)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',110,1775)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',110,1778)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',110,1778)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',110,1778)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',110,1778)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',110,1778)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',110,1778)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1780)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1780)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',110,1780)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',110,1780)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',110,1780)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',110,1780)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',110,1782)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',110,1782)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',110,1782)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',110,1782)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',110,1782)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',110,1782)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',110,1782)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'build',110,1783)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'build',110,1783)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'build',110,1783)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',110,1788)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',110,1788)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <aParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',110,1788)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',110,1788)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',110,1788)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <semActionParam> <rept-aParams3> 
popping <aParams>adding ['<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(intNum,'2',110,1789)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',110,1789)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',110,1789)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',110,1789)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',110,1789)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <rept-aParams3> ->  <aParamsTail> <rept-aParams3> 
popping <rept-aParams3>adding ['<rept-aParams3>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',110,1790)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',110,1790)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',110,1792)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',110,1792)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'3.5',110,1792)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'3.5',110,1792)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'3.5',110,1792)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(RPAREN,')',110,1795)
found rule to use: <rept-aParams3> ->  EPSILON 
popping <rept-aParams3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',110,1795)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',110,1796)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',110,1796)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1802)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1802)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1802)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',111,1802)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',111,1802)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',111,1802)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',111,1805)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',111,1805)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',111,1805)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',111,1805)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',111,1805)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',111,1805)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',111,1807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',111,1807)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',111,1807)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',111,1807)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',111,1809)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',111,1809)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',111,1809)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',111,1809)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',111,1809)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',111,1809)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',111,1809)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'build',111,1810)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'build',111,1810)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'build',111,1810)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',111,1815)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',111,1815)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <aParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',111,1815)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',111,1815)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',111,1815)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <semActionParam> <rept-aParams3> 
popping <aParams>adding ['<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(MINUS,'-',111,1816)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(MINUS,'-',111,1816)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(MINUS,'-',111,1816)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <factor> ->  <semMarkerSignedNum> <sign> <factor> <semActionSignedNum> 
popping <factor>adding ['<semActionSignedNum>', '<factor>', '<sign>', '<semMarkerSignedNum>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>', '<semMarkerSignedNum>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <semMarkerSignedNum> ->  EPSILON 
popping <semMarkerSignedNum>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>', 'EPSILON']. Token to read: LexToken(MINUS,'-',111,1816)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', '<sign>']. Token to read: LexToken(MINUS,'-',111,1816)
found rule to use: <sign> ->  MINUS 
popping <sign>adding ['MINUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>', 'MINUS']. Token to read: LexToken(MINUS,'-',111,1816)
popping terminal MINUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', '<factor>']. Token to read: LexToken(floatNum,'2.0',111,1817)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>', 'floatNum']. Token to read: LexToken(floatNum,'2.0',111,1817)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionSignedNum>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <semActionSignedNum> ->  EPSILON 
popping <semActionSignedNum>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <rept-aParams3> ->  <aParamsTail> <rept-aParams3> 
popping <rept-aParams3>adding ['<rept-aParams3>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',111,1820)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',111,1820)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',111,1822)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',111,1822)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'1.0',111,1822)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'1.0',111,1822)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'1.0',111,1822)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <rept-aParams3> ->  <aParamsTail> <rept-aParams3> 
popping <rept-aParams3>adding ['<rept-aParams3>', '<aParamsTail>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<aParamsTail>']. Token to read: LexToken(COMMA,',',111,1825)
found rule to use: <aParamsTail> ->  COMMA <semMarkerParam> <expr> <semActionParam> 
popping <aParamsTail>adding ['<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>', 'COMMA']. Token to read: LexToken(COMMA,',',111,1825)
popping terminal COMMA
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',111,1827)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',111,1827)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(floatNum,'0.0',111,1827)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(floatNum,'0.0',111,1827)
found rule to use: <factor> ->  floatNum 
popping <factor>adding ['floatNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'floatNum']. Token to read: LexToken(floatNum,'0.0',111,1827)
popping terminal floatNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(RPAREN,')',111,1830)
found rule to use: <rept-aParams3> ->  EPSILON 
popping <rept-aParams3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',111,1830)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',111,1831)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',111,1831)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'counter',112,1837)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'counter',112,1837)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',112,1837)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',112,1837)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',112,1837)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',112,1837)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',112,1845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',112,1845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',112,1845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',112,1845)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',112,1845)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',112,1845)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',112,1847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',112,1847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',112,1847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',112,1847)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',112,1847)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',112,1847)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',112,1849)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',112,1849)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'x',113,1852)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'x',113,1852)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'x',113,1852)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'x',113,1852)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'x',113,1852)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'x',113,1852)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',113,1854)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',113,1854)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',113,1854)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',113,1854)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',113,1854)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',113,1854)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',113,1856)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',113,1856)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',113,1856)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',113,1856)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',113,1857)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',113,1857)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',113,1857)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',113,1857)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',113,1857)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',113,1857)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'f1',114,1860)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f1',114,1860)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',114,1860)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',114,1860)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',114,1860)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',114,1860)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',114,1862)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',114,1862)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',114,1862)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',114,1862)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',114,1862)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',114,1862)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',114,1862)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'z',114,1863)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'z',114,1863)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'z',114,1863)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',114,1865)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',114,1865)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',114,1865)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',114,1865)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',114,1865)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',114,1865)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'10',114,1867)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'10',114,1867)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'10',114,1867)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'10',114,1867)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',114,1869)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',114,1869)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',114,1869)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',114,1869)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',114,1869)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',114,1869)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'array',116,1874)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'array',116,1874)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'array',116,1874)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'array',116,1874)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'array',116,1874)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'array',116,1874)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',116,1880)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',116,1880)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',116,1880)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',116,1880)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',116,1880)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',116,1880)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',116,1882)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',116,1882)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',116,1882)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',116,1882)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',116,1883)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',116,1883)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',116,1883)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',116,1883)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',116,1883)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',116,1883)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'array',117,1886)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'array',117,1886)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'array',117,1886)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'array',117,1886)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'array',117,1886)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'array',117,1886)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(LSB,'[',117,1891)
found rule to use: <opt-idnestid3> ->  <idnestLFLF> 
popping <opt-idnestid3>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LSB,'[',117,1891)
found rule to use: <idnestLFLF> ->  <semMarkerIndexList> <indice> <rept-idnestLFLF2> <semActionIndexList> 
popping <idnestLFLF>adding ['<semActionIndexList>', '<rept-idnestLFLF2>', '<indice>', '<semMarkerIndexList>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', '<indice>', '<semMarkerIndexList>']. Token to read: LexToken(LSB,'[',117,1891)
found rule to use: <semMarkerIndexList> ->  EPSILON 
popping <semMarkerIndexList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', '<indice>', 'EPSILON']. Token to read: LexToken(LSB,'[',117,1891)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', '<indice>']. Token to read: LexToken(LSB,'[',117,1891)
found rule to use: <indice> ->  LSB <arithExpr> RSB 
popping <indice>adding ['RSB', '<arithExpr>', 'LSB'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<arithExpr>', 'LSB']. Token to read: LexToken(LSB,'[',117,1891)
popping terminal LSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<arithExpr>']. Token to read: LexToken(intNum,'2',117,1892)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',117,1892)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',117,1892)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',117,1892)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',117,1892)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',117,1892)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',117,1892)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',117,1892)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RSB,']',117,1893)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1893)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RSB,']',117,1893)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1893)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RSB,']',117,1893)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1893)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>']. Token to read: LexToken(RSB,']',117,1893)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', 'EPSILON']. Token to read: LexToken(RSB,']',117,1893)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB']. Token to read: LexToken(RSB,']',117,1893)
popping terminal RSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>']. Token to read: LexToken(LSB,'[',117,1894)
found rule to use: <rept-idnestLFLF2> ->  <indice> <rept-idnestLFLF2> 
popping <rept-idnestLFLF2>adding ['<rept-idnestLFLF2>', '<indice>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', '<indice>']. Token to read: LexToken(LSB,'[',117,1894)
found rule to use: <indice> ->  LSB <arithExpr> RSB 
popping <indice>adding ['RSB', '<arithExpr>', 'LSB'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<arithExpr>', 'LSB']. Token to read: LexToken(LSB,'[',117,1894)
popping terminal LSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<arithExpr>']. Token to read: LexToken(intNum,'4',117,1895)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'4',117,1895)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'4',117,1895)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'4',117,1895)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'4',117,1895)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'4',117,1895)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'4',117,1895)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'4',117,1895)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RSB,']',117,1896)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1896)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RSB,']',117,1896)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1896)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RSB,']',117,1896)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RSB,']',117,1896)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', '<semActionArithExpr>']. Token to read: LexToken(RSB,']',117,1896)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB', 'EPSILON']. Token to read: LexToken(RSB,']',117,1896)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>', 'RSB']. Token to read: LexToken(RSB,']',117,1896)
popping terminal RSB
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', '<rept-idnestLFLF2>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <rept-idnestLFLF2> ->  EPSILON 
popping <rept-idnestLFLF2>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<semActionIndexList>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <semActionIndexList> ->  EPSILON 
popping <semActionIndexList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',117,1898)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',117,1898)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'3',117,1900)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'3',117,1900)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'3',117,1900)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'3',117,1900)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',117,1901)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',117,1901)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',117,1901)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',117,1901)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',117,1901)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',117,1901)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'array',119,1906)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'array',119,1906)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'array',119,1906)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'array',119,1906)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'array',119,1906)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'array',119,1906)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',119,1911)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',119,1911)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',119,1911)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',119,1911)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',119,1911)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',119,1911)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',119,1911)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'func',119,1912)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'func',119,1912)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'func',119,1912)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <opt-idnestLF4> ->  EPSILON 
popping <opt-idnestLF4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',119,1917)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',119,1917)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',119,1917)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',119,1917)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',119,1917)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',119,1917)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'10',119,1919)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'10',119,1919)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'10',119,1919)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'10',119,1919)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',119,1921)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',119,1921)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',119,1921)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',119,1921)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',119,1921)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',119,1921)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(while,'while',121,1929)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(while,'while',121,1929)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(while,'while',121,1929)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(while,'while',121,1929)
found rule to use: <statement> ->  <semMarkerWhile> while LPAREN <relExpr> RPAREN <semMarkerStatBlock> <statBlock> SEMICOLON <semActionStatBlock> <semActionWhile> 
popping <statement>adding ['<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', '<semMarkerWhile>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', '<semMarkerWhile>']. Token to read: LexToken(while,'while',121,1929)
found rule to use: <semMarkerWhile> ->  EPSILON 
popping <semMarkerWhile>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while', 'EPSILON']. Token to read: LexToken(while,'while',121,1929)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN', 'while']. Token to read: LexToken(while,'while',121,1929)
popping terminal while
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',121,1934)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<relExpr>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <relExpr> ->  <semMarkerRelExpr> <arithExpr> <relOp> <arithExpr> <semActionRelExpr> 
popping <relExpr>adding ['<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', '<semMarkerRelExpr>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <semMarkerRelExpr> ->  EPSILON 
popping <semMarkerRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>', 'EPSILON']. Token to read: LexToken(id,'counter',121,1935)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<arithExpr>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',121,1935)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',121,1935)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',121,1935)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',121,1935)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',121,1935)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',121,1935)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', '<semActionArithExpr>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>', 'EPSILON']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', '<relOp>']. Token to read: LexToken(LEQ,'<=',121,1943)
found rule to use: <relOp> ->  LEQ 
popping <relOp>adding ['LEQ'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>', 'LEQ']. Token to read: LexToken(LEQ,'<=',121,1943)
popping terminal LEQ
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<arithExpr>']. Token to read: LexToken(intNum,'10',121,1946)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'10',121,1946)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'10',121,1946)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'10',121,1946)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'10',121,1946)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'10',121,1946)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'10',121,1946)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'10',121,1946)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',121,1949)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',121,1949)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',121,1949)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',121,1949)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',121,1949)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',121,1949)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',121,1949)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f1',121,1951)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f1',121,1951)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',121,1951)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',121,1951)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',121,1951)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',121,1951)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', '<semActionRelExpr>']. Token to read: LexToken(RPAREN,')',121,1953)
found rule to use: <semActionRelExpr> ->  EPSILON 
popping <semActionRelExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>', 'RPAREN']. Token to read: LexToken(RPAREN,')',121,1953)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', '<semMarkerStatBlock>']. Token to read: LexToken(do,'do',122,1961)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>', 'EPSILON']. Token to read: LexToken(do,'do',122,1961)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', '<statBlock>']. Token to read: LexToken(do,'do',122,1961)
found rule to use: <statBlock> ->  do <rept-statBlock1> end 
popping <statBlock>adding ['end', '<rept-statBlock1>', 'do'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'do']. Token to read: LexToken(do,'do',122,1961)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',123,1972)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',123,1972)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',123,1972)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',123,1972)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',123,1972)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',123,1977)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',123,1978)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',123,1978)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',123,1978)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',123,1978)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',123,1978)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',123,1978)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',123,1985)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',123,1985)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',123,1986)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(write,'write',124,1996)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(write,'write',124,1996)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',124,1996)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',124,1996)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',124,1996)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',124,1996)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',124,1996)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',124,2001)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f1',124,2002)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f1',124,2002)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f1',124,2002)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f1',124,2002)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f1',124,2002)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f1',124,2002)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',124,2004)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',124,2004)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',124,2004)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',124,2004)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',124,2004)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',124,2004)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',124,2004)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'evaluate',124,2005)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'evaluate',124,2005)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'evaluate',124,2005)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',124,2013)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',124,2013)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <aParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',124,2013)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',124,2013)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',124,2013)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <semActionParam> <rept-aParams3> 
popping <aParams>adding ['<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(id,'counter',124,2014)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',124,2014)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',124,2014)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',124,2014)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',124,2014)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',124,2014)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',124,2014)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(RPAREN,')',124,2021)
found rule to use: <rept-aParams3> ->  EPSILON 
popping <rept-aParams3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',124,2021)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',124,2022)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',124,2022)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',124,2023)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(write,'write',125,2033)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(write,'write',125,2033)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(write,'write',125,2033)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(write,'write',125,2033)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',125,2033)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',125,2033)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',125,2033)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',125,2038)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',125,2039)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',125,2039)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',125,2039)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',125,2039)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',125,2039)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',125,2039)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',125,2041)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',125,2041)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',125,2041)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',125,2041)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',125,2041)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',125,2041)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',125,2041)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'evaluate',125,2042)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'evaluate',125,2042)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'evaluate',125,2042)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',125,2050)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',125,2050)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <aParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',125,2050)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',125,2050)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',125,2050)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <semActionParam> <rept-aParams3> 
popping <aParams>adding ['<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(id,'counter',125,2051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'counter',125,2051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'counter',125,2051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'counter',125,2051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'counter',125,2051)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'counter',125,2051)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'counter',125,2051)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(RPAREN,')',125,2058)
found rule to use: <rept-aParams3> ->  EPSILON 
popping <rept-aParams3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',125,2058)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',125,2059)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',125,2059)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',125,2060)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<semActionWrite>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2064)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <rept-statBlock1> ->  <statement> <rept-statBlock1> 
popping <rept-statBlock1>adding ['<rept-statBlock1>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statement>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2064)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2064)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',126,2064)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',126,2064)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',126,2064)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(DOT,'.',126,2066)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(DOT,'.',126,2066)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(DOT,'.',126,2066)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(DOT,'.',126,2066)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(DOT,'.',126,2066)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(DOT,'.',126,2066)
found rule to use: <rept-idnestLF0> ->  DOT <semMarkerVarMember> id <opt-idnestLF4> <semActionVarMember> <rept-idnestLF0> 
popping <rept-idnestLF0>adding ['<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>', 'DOT']. Token to read: LexToken(DOT,'.',126,2066)
popping terminal DOT
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'evaluate',126,2067)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id', 'EPSILON']. Token to read: LexToken(id,'evaluate',126,2067)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>', 'id']. Token to read: LexToken(id,'evaluate',126,2067)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<opt-idnestLF4>']. Token to read: LexToken(LPAREN,'(',126,2075)
found rule to use: <opt-idnestLF4> ->  <idnestLFLF> 
popping <opt-idnestLF4>adding ['<idnestLFLF>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<idnestLFLF>']. Token to read: LexToken(LPAREN,'(',126,2075)
found rule to use: <idnestLFLF> ->  <semMarkerFuncCall> LPAREN <aParams> RPAREN <semActionFuncCall> 
popping <idnestLFLF>adding ['<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', '<semMarkerFuncCall>']. Token to read: LexToken(LPAREN,'(',126,2075)
found rule to use: <semMarkerFuncCall> ->  EPSILON 
popping <semMarkerFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN', 'EPSILON']. Token to read: LexToken(LPAREN,'(',126,2075)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',126,2075)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<aParams>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <aParams> ->  <semMarkerParam> <expr> <semActionParam> <rept-aParams3> 
popping <aParams>adding ['<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', '<semMarkerParam>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <semMarkerParam> ->  EPSILON 
popping <semMarkerParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2076)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<expr>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2076)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2076)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f2',126,2076)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f2',126,2076)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f2',126,2076)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f2',126,2076)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', '<exprLF>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', '<semActionParam>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <semActionParam> ->  EPSILON 
popping <semActionParam>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', '<rept-aParams3>']. Token to read: LexToken(RPAREN,')',126,2078)
found rule to use: <rept-aParams3> ->  EPSILON 
popping <rept-aParams3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>', 'RPAREN']. Token to read: LexToken(RPAREN,')',126,2078)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', '<semActionFuncCall>']. Token to read: LexToken(SEMICOLON,';',126,2079)
found rule to use: <semActionFuncCall> ->  EPSILON 
popping <semActionFuncCall>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',126,2079)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',126,2079)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',126,2079)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',126,2079)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',126,2079)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',126,2079)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',126,2079)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', '<statementLF>']. Token to read: LexToken(SEMICOLON,';',126,2079)
found rule to use: <statementLF> ->  SEMICOLON 
popping <statementLF>adding ['SEMICOLON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',126,2079)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', '<rept-statBlock1>']. Token to read: LexToken(end,'end',127,2087)
found rule to use: <rept-statBlock1> ->  EPSILON 
popping <rept-statBlock1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end', 'EPSILON']. Token to read: LexToken(end,'end',127,2087)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON', 'end']. Token to read: LexToken(end,'end',127,2087)
popping terminal end
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',127,2090)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',128,2094)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>', 'EPSILON']. Token to read: LexToken(end,'end',128,2094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWhile>']. Token to read: LexToken(end,'end',128,2094)
found rule to use: <semActionWhile> ->  EPSILON 
popping <semActionWhile>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',128,2094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',128,2094)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',128,2094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',128,2094)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',128,2094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',128,2094)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', 'EPSILON']. Token to read: LexToken(end,'end',128,2094)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end']. Token to read: LexToken(end,'end',128,2094)
popping terminal end


Parsing successful!