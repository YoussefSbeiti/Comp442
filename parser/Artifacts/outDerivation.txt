---------------------------------------------------------------
currentStack['$', '<START>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <START> ->  <prog> 
popping <START>adding ['<prog>'] to stack
---------------------------------------------------------------
currentStack['$', '<prog>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <prog> ->  <semMarkerClassList> <rept-prog1> <semActionClassList> <semMarkerFuncDefList> <rept-prog4> <semActionFuncDefList> main <funcBody> 
popping <prog>adding ['<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', '<semMarkerClassList>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <semMarkerClassList> ->  EPSILON 
popping <semMarkerClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', '<rept-prog1>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <rept-prog1> ->  EPSILON 
popping <rept-prog1>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', '<semActionClassList>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <semActionClassList> ->  EPSILON 
popping <semActionClassList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', '<semMarkerFuncDefList>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <semMarkerFuncDefList> ->  EPSILON 
popping <semMarkerFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', '<rept-prog4>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <rept-prog4> ->  EPSILON 
popping <rept-prog4>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', '<semActionFuncDefList>']. Token to read: LexToken(main,'main',3,2)
found rule to use: <semActionFuncDefList> ->  EPSILON 
popping <semActionFuncDefList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main', 'EPSILON']. Token to read: LexToken(main,'main',3,2)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', '<funcBody>', 'main']. Token to read: LexToken(main,'main',3,2)
popping terminal main
---------------------------------------------------------------
currentStack['$', '<funcBody>']. Token to read: LexToken(local,'local',4,9)
found rule to use: <funcBody> ->  <semMarkerFuncBody> <semMarkerLocalVarList> <opt-funcBody2> <semActionLocalVarList> do <semMarkerStatBlock> <rept-funcBody6> <semActionStatBlock> <semActionFuncBody> end 
popping <funcBody>adding ['end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', '<semMarkerFuncBody>']. Token to read: LexToken(local,'local',4,9)
found rule to use: <semMarkerFuncBody> ->  EPSILON 
popping <semMarkerFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>', 'EPSILON']. Token to read: LexToken(local,'local',4,9)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', '<semMarkerLocalVarList>']. Token to read: LexToken(local,'local',4,9)
found rule to use: <semMarkerLocalVarList> ->  EPSILON 
popping <semMarkerLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>', 'EPSILON']. Token to read: LexToken(local,'local',4,9)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<opt-funcBody2>']. Token to read: LexToken(local,'local',4,9)
found rule to use: <opt-funcBody2> ->  local <rept-opt-funcBody21> 
popping <opt-funcBody2>adding ['<rept-opt-funcBody21>', 'local'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'local']. Token to read: LexToken(local,'local',4,9)
popping terminal local
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',5,19)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',5,19)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',5,19)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',5,19)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',5,19)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',5,19)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'a',5,27)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',5,28)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',5,28)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',5,28)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',6,34)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',6,34)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',6,34)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',6,34)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',6,34)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',6,34)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',6,34)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',6,34)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'b',6,42)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',6,43)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',6,43)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',6,43)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',7,49)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,49)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',7,49)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',7,49)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',7,49)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',7,49)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',7,49)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',7,49)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'c',7,57)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',7,58)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',7,58)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',7,58)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',8,64)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',8,64)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',8,64)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',8,64)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',8,64)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',8,64)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',8,64)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',8,64)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'d',8,72)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',8,73)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',8,73)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',8,73)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',9,79)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',9,79)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',9,79)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',9,79)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',9,79)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',9,79)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',9,79)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',9,79)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'e',9,87)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',9,88)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',9,88)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',9,88)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(integer,'integer',10,94)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(integer,'integer',10,94)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(integer,'integer',10,94)
found rule to use: <rept-opt-funcBody21> ->  <varDecl> <rept-opt-funcBody21> 
popping <rept-opt-funcBody21>adding ['<rept-opt-funcBody21>', '<varDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<varDecl>']. Token to read: LexToken(integer,'integer',10,94)
found rule to use: <varDecl> ->  <semMarkerVarDecl> <type> id <arraySizeList> SEMICOLON <semActionVarDecl> 
popping <varDecl>adding ['<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', '<semMarkerVarDecl>']. Token to read: LexToken(integer,'integer',10,94)
found rule to use: <semMarkerVarDecl> ->  EPSILON 
popping <semMarkerVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>', 'EPSILON']. Token to read: LexToken(integer,'integer',10,94)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', '<type>']. Token to read: LexToken(integer,'integer',10,94)
found rule to use: <type> ->  integer 
popping <type>adding ['integer'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id', 'integer']. Token to read: LexToken(integer,'integer',10,94)
popping terminal integer
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>', 'id']. Token to read: LexToken(id,'f',10,102)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', '<arraySizeList>']. Token to read: LexToken(SEMICOLON,';',10,103)
found rule to use: <arraySizeList> ->  EPSILON 
popping <arraySizeList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',10,103)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',10,103)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', '<semActionVarDecl>']. Token to read: LexToken(do,'do',11,107)
found rule to use: <semActionVarDecl> ->  EPSILON 
popping <semActionVarDecl>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>', 'EPSILON']. Token to read: LexToken(do,'do',11,107)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', '<rept-opt-funcBody21>']. Token to read: LexToken(do,'do',11,107)
found rule to use: <rept-opt-funcBody21> ->  EPSILON 
popping <rept-opt-funcBody21>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>', 'EPSILON']. Token to read: LexToken(do,'do',11,107)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', '<semActionLocalVarList>']. Token to read: LexToken(do,'do',11,107)
found rule to use: <semActionLocalVarList> ->  EPSILON 
popping <semActionLocalVarList>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do', 'EPSILON']. Token to read: LexToken(do,'do',11,107)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>', 'do']. Token to read: LexToken(do,'do',11,107)
popping terminal do
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semMarkerStatBlock>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <semMarkerStatBlock> ->  EPSILON 
popping <semMarkerStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'a',12,114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'a',12,114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'a',12,114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',12,114)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',12,114)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'a',12,114)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',12,116)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',12,116)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',12,116)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'1',12,118)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'1',12,118)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'1',12,118)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'1',12,118)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',12,119)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',12,119)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',12,119)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',12,119)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',12,119)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',12,119)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'b',13,125)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'b',13,125)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'b',13,125)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',13,125)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',13,125)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'b',13,125)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',13,127)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',13,127)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',13,127)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'2',13,129)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'2',13,129)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'2',13,129)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'2',13,129)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',13,130)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',13,130)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',13,130)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',13,130)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',13,130)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',13,130)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'c',14,136)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'c',14,136)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'c',14,136)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'c',14,136)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'c',14,136)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'c',14,136)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',14,138)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',14,138)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',14,138)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'3',14,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'3',14,140)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'3',14,140)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'3',14,140)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',14,141)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',14,141)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',14,141)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',14,141)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',14,141)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',14,141)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'d',15,147)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'d',15,147)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'d',15,147)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'d',15,147)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'d',15,147)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'d',15,147)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',15,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',15,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',15,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',15,149)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',15,149)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',15,149)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'15',15,151)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'15',15,151)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'15',15,151)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'15',15,151)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',15,153)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',15,153)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',15,153)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',15,153)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',15,153)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',15,153)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'e',16,159)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'e',16,159)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'e',16,159)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'e',16,159)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'e',16,159)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'e',16,159)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',16,161)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',16,161)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',16,161)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',16,161)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',16,161)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',16,161)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'6',16,163)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'6',16,163)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'6',16,163)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'6',16,163)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',16,164)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',16,164)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',16,164)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',16,164)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',16,164)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',16,164)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(id,'f',17,170)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <statement> ->  <semMarkerAssign> <idnestid> <statementLF> 
popping <statement>adding ['<statementLF>', '<idnestid>', '<semMarkerAssign>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', '<semMarkerAssign>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <semMarkerAssign> ->  EPSILON 
popping <semMarkerAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>', 'EPSILON']. Token to read: LexToken(id,'f',17,170)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<idnestid>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'f',17,170)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'f',17,170)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'f',17,170)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'f',17,170)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',17,172)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',17,172)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',17,172)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', '<semActionVariable>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>', 'EPSILON']. Token to read: LexToken(ASSIGN,'=',17,172)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statementLF>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <statementLF> ->  <assignOp> <expr> SEMICOLON <semActionAssign> 
popping <statementLF>adding ['<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', '<assignOp>']. Token to read: LexToken(ASSIGN,'=',17,172)
found rule to use: <assignOp> ->  ASSIGN 
popping <assignOp>adding ['ASSIGN'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>', 'ASSIGN']. Token to read: LexToken(ASSIGN,'=',17,172)
popping terminal ASSIGN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<expr>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<arithExpr>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'a',17,174)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'a',17,174)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'a',17,174)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'a',17,174)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'a',17,174)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'a',17,174)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',17,175)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',17,175)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'b',17,176)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'b',17,176)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'b',17,176)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'b',17,176)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'b',17,176)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'b',17,176)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(PLUS,'+',17,177)
found rule to use: <addOp> ->  PLUS 
popping <addOp>adding ['PLUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'PLUS']. Token to read: LexToken(PLUS,'+',17,177)
popping terminal PLUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'c',17,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'c',17,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'c',17,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'c',17,178)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'c',17,178)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'c',17,178)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(TIMES,'*',17,179)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(TIMES,'*',17,179)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(TIMES,'*',17,179)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(TIMES,'*',17,179)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <rightrec-term> ->  <multOp> <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <rightrec-term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', '<multOp>']. Token to read: LexToken(TIMES,'*',17,179)
found rule to use: <multOp> ->  TIMES 
popping <multOp>adding ['TIMES'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>', 'TIMES']. Token to read: LexToken(TIMES,'*',17,179)
popping terminal TIMES
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'d',17,180)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'d',17,180)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'d',17,180)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'d',17,180)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'d',17,180)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'d',17,180)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'d',17,180)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'d',17,180)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'d',17,180)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<semActionTerm>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <rightrec-arithExpr> ->  <addOp> <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <rightrec-arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', '<addOp>']. Token to read: LexToken(MINUS,'-',17,181)
found rule to use: <addOp> ->  MINUS 
popping <addOp>adding ['MINUS'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>', 'MINUS']. Token to read: LexToken(MINUS,'-',17,181)
popping terminal MINUS
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(id,'e',17,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(id,'e',17,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <factor> ->  <idnestid> 
popping <factor>adding ['<idnestid>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<idnestid>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <idnestid> ->  <semMarkerVariable> <semMarkerVarMember> id <opt-idnestid3> <semActionVarMember> <idnestLF> <semActionVariable> 
popping <idnestid>adding ['<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', '<semMarkerVariable>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <semMarkerVariable> ->  EPSILON 
popping <semMarkerVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>', 'EPSILON']. Token to read: LexToken(id,'e',17,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', '<semMarkerVarMember>']. Token to read: LexToken(id,'e',17,182)
found rule to use: <semMarkerVarMember> ->  EPSILON 
popping <semMarkerVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id', 'EPSILON']. Token to read: LexToken(id,'e',17,182)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>', 'id']. Token to read: LexToken(id,'e',17,182)
popping terminal id
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', '<opt-idnestid3>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <opt-idnestid3> ->  EPSILON 
popping <opt-idnestid3>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', '<semActionVarMember>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionVarMember> ->  EPSILON 
popping <semActionVarMember>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<idnestLF>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <idnestLF> ->  <rept-idnestLF0> 
popping <idnestLF>adding ['<rept-idnestLF0>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', '<rept-idnestLF0>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <rept-idnestLF0> ->  EPSILON 
popping <rept-idnestLF0>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<semActionVariable>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionVariable> ->  EPSILON 
popping <semActionVariable>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', '<exprLF>']. Token to read: LexToken(SEMICOLON,';',17,183)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON', 'EPSILON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',17,183)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionAssign>']. Token to read: LexToken(write,'write',18,189)
found rule to use: <semActionAssign> ->  EPSILON 
popping <semActionAssign>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(write,'write',18,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(write,'write',18,189)
found rule to use: <rept-funcBody6> ->  <statement> <rept-funcBody6> 
popping <rept-funcBody6>adding ['<rept-funcBody6>', '<statement>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<statement>']. Token to read: LexToken(write,'write',18,189)
found rule to use: <statement> ->  <semMarkerWrite> write LPAREN <expr> RPAREN SEMICOLON <semActionWrite> 
popping <statement>adding ['<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', '<semMarkerWrite>']. Token to read: LexToken(write,'write',18,189)
found rule to use: <semMarkerWrite> ->  EPSILON 
popping <semMarkerWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write', 'EPSILON']. Token to read: LexToken(write,'write',18,189)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN', 'write']. Token to read: LexToken(write,'write',18,189)
popping terminal write
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>', 'LPAREN']. Token to read: LexToken(LPAREN,'(',18,194)
popping terminal LPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<expr>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <expr> ->  <arithExpr> <exprLF> 
popping <expr>adding ['<exprLF>', '<arithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<arithExpr>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <arithExpr> ->  <semMarkerArithExpr> <term> <rightrec-arithExpr> <semActionArithExpr> 
popping <arithExpr>adding ['<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', '<semMarkerArithExpr>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <semMarkerArithExpr> ->  EPSILON 
popping <semMarkerArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>', 'EPSILON']. Token to read: LexToken(intNum,'42',18,195)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<term>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <term> ->  <semMarkerTerm> <factor> <rightrec-term> <semActionTerm> 
popping <term>adding ['<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', '<semMarkerTerm>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <semMarkerTerm> ->  EPSILON 
popping <semMarkerTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>', 'EPSILON']. Token to read: LexToken(intNum,'42',18,195)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', '<factor>']. Token to read: LexToken(intNum,'42',18,195)
found rule to use: <factor> ->  intNum 
popping <factor>adding ['intNum'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>', 'intNum']. Token to read: LexToken(intNum,'42',18,195)
popping terminal intNum
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', '<rightrec-term>']. Token to read: LexToken(RPAREN,')',18,197)
found rule to use: <rightrec-term> ->  EPSILON 
popping <rightrec-term>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', '<semActionTerm>']. Token to read: LexToken(RPAREN,')',18,197)
found rule to use: <semActionTerm> ->  EPSILON 
popping <semActionTerm>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', '<rightrec-arithExpr>']. Token to read: LexToken(RPAREN,')',18,197)
found rule to use: <rightrec-arithExpr> ->  EPSILON 
popping <rightrec-arithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', '<semActionArithExpr>']. Token to read: LexToken(RPAREN,')',18,197)
found rule to use: <semActionArithExpr> ->  EPSILON 
popping <semActionArithExpr>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', '<exprLF>']. Token to read: LexToken(RPAREN,')',18,197)
found rule to use: <exprLF> ->  EPSILON 
popping <exprLF>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN', 'EPSILON']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON', 'RPAREN']. Token to read: LexToken(RPAREN,')',18,197)
popping terminal RPAREN
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>', 'SEMICOLON']. Token to read: LexToken(SEMICOLON,';',18,198)
popping terminal SEMICOLON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', '<semActionWrite>']. Token to read: LexToken(end,'end',19,202)
found rule to use: <semActionWrite> ->  EPSILON 
popping <semActionWrite>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>', 'EPSILON']. Token to read: LexToken(end,'end',19,202)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', '<rept-funcBody6>']. Token to read: LexToken(end,'end',19,202)
found rule to use: <rept-funcBody6> ->  EPSILON 
popping <rept-funcBody6>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>', 'EPSILON']. Token to read: LexToken(end,'end',19,202)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', '<semActionStatBlock>']. Token to read: LexToken(end,'end',19,202)
found rule to use: <semActionStatBlock> ->  EPSILON 
popping <semActionStatBlock>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>', 'EPSILON']. Token to read: LexToken(end,'end',19,202)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end', '<semActionFuncBody>']. Token to read: LexToken(end,'end',19,202)
found rule to use: <semActionFuncBody> ->  EPSILON 
popping <semActionFuncBody>adding ['EPSILON'] to stack
---------------------------------------------------------------
currentStack['$', 'end', 'EPSILON']. Token to read: LexToken(end,'end',19,202)
popping terminal EPSILON
---------------------------------------------------------------
currentStack['$', 'end']. Token to read: LexToken(end,'end',19,202)
popping terminal end


Parsing successful!