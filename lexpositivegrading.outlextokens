[eq, ==, 1] [plus, +, 1] [openpar, (, 1] [if, if, 1] [do, do, 1] 
[noteq, <>, 2] [minus, -, 2] [closepar, ), 2] [then, then, 2] [end, end, 2]
[lt, <, 3] [mult, *, 3] [opencbr, {, 3] [else, else, 3] [public, public, 3]
[gt, >, 4] [div, /, 4] [closecbr, }, 4] [while, while, 4] [private, private ,4]
[leq, <=, 5] [eq, =, 5] [opensqbr, [, 5] [class, class, 5] [or, or, 5]
[gt, >=, 6] [closesqbr, ], 6] [integer, integer, 6] [and, and, 6]
[semi, ;, 7]  [float, float, 7] [not, not, 7]
[comma, ,, 8] [ [read, read, 8] [inherits, inherits, 8]
[dot, ., 9] [write, write, 9] [local, local, 9]
[colon, :, 10] [return, return, 10]
[doubleColon, ::, 11] [main, main, 11]
[int, 0, 13]
[int, 1, 14]
[int, 10, 15]
[int, 12, 16]
[int, 123, 17]
[int, 12345, 18]
[float, 1.23, 20]
[float, 12.34, 21]
[float, 123.4, 22]
[float, 12345.6789e-123, 23]
[id, abc, 25]	
[id, abc1, 26]
[id, a1bc, 27]
[id, abc_1abc, 28]
[id, abc1_abc, 29]
[blockComment, /* this is a single line block comment */, 31]
[blockComment, /* this is a\nmultiple line\nblock comment \n*/, 33]
[inlineComment, // this is an inline comment, 38]
